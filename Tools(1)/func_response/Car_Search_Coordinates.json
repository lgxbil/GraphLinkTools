{
    "shorten": {
        "api": {
            "name": "Car_Search_Coordinates",
            "endpoint": "https://booking-com18.p.rapidapi.com/car/search-coordinates",
            "func_description": "",
            "parameters": {
                "type": "object",
                "properties": {
                    "pickUpCoord": {
                        "type": "String",
                        "description": "Pick-up coordinates\nRequired: true\npickUpCoord can be retrieved from /car/auto-complete endpoint(data->coordinates)\nFormat: latitude,longitude\nEx: 40.768074,-73.981895",
                        "example_value": "40.768074,-73.981895",
                        "required": true
                    },
                    "pickUpDate": {
                        "type": "Date (yyyy-mm-dd)",
                        "description": "Pick-up date\nRequired: true\nFormat: YYYY-MM-DD\nEx: 2024-01-25",
                        "example_value": "",
                        "required": true
                    },
                    "pickUpTime": {
                        "type": "Time (24-Hour Hh:Mm)",
                        "description": "Pick-up time\nRequired: true\nFormat: HH:MM\nEx: 10:00",
                        "example_value": "",
                        "required": true
                    },
                    "dropOffDate": {
                        "type": "Date (yyyy-mm-dd)",
                        "description": "Drop-off date\nRequired: true\nFormat: YYYY-MM-DD\nEx: 2024-01-26",
                        "example_value": "",
                        "required": true
                    },
                    "dropOffTime": {
                        "type": "Time (24-Hour Hh:Mm)",
                        "description": "Drop-off time\nRequired: true\nFormat: HH:MM\nEx: 10:00",
                        "example_value": "",
                        "required": true
                    },
                    "dropOffCoord": {
                        "type": "String",
                        "description": "Drop-off coordinates\ndropOffCoord can be retrieved from /car/auto-complete endpoint(data->coordinates)\nFormat: latitude,longitude\nEx: 40.768074,-73.981895",
                        "example_value": "",
                        "required": false
                    },
                    "sortBy": {
                        "type": "String",
                        "description": "Sort by\nsortBy can be retrieved from this endpoint(data->sort->identifier)\nEx: recommended\nDefault value: recommended\n\nrecommended: Recommended â€“ best first\nprice_low_to_high: Price - lowest first",
                        "example_value": "",
                        "required": false
                    },
                    "driverAge": {
                        "type": "Number",
                        "description": "Driver's age: 30-65\nEx: 40",
                        "example_value": "",
                        "required": false
                    },
                    "carType": {
                        "type": "String",
                        "description": "Car Type\ncarType can be retrieved from this endpoint(data->filter(id=carCategory)->categories->id)\nIt can input multiple values, and the values should be separated by commas\nEx: carCategory::carriers,carCategory::suvs\nDefault value: recommended\n\ncarCategory::small: Small\ncarCategory::medium: Medium\ncarCategory::large: Large\ncarCategory::premium: Premium\ncarCategory::carriers: People carriers\ncarCategory::suvs: SUVs",
                        "example_value": "",
                        "required": false
                    },
                    "supplier": {
                        "type": "String",
                        "description": "Supplier\ncarType can be retrieved from this endpoint(data->filter(id=supplier)->categories->id)\nIt can input multiple values, and the values should be separated by commas\nEx: supplier::Alamo,supplier::Enterprise",
                        "example_value": "",
                        "required": false
                    },
                    "transmission": {
                        "type": "String",
                        "description": "Transmission\ntransmission can be retrieved from this endpoint(data->filter(id=transmission)->categories->id)\nIt can input multiple values, and the values should be separated by commas\nEx: transmission::AUTOMATIC",
                        "example_value": "",
                        "required": false
                    },
                    "hasAirConditioning (optional)": {
                        "type": "Boolean",
                        "description": "Air Conditioning\nDefault value: false",
                        "example_value": "",
                        "required": false
                    },
                    "units": {
                        "type": "String",
                        "description": "Units\nEx: metric\nDefault value: metric\nChoose one of the values below\nmetric: Metric (km, m2)\nimperial: Imperial (miles, ft2)",
                        "example_value": "",
                        "required": false
                    },
                    "languageCode": {
                        "type": "String",
                        "description": "Language\nlanguageCode can be retrieved from /languages endpoint(data->code)\nEx: en-us\nDefault value: en-us",
                        "example_value": "",
                        "required": false
                    },
                    "currencyCode": {
                        "type": "String",
                        "description": "Currency\ncurrencyCode can be retrieved from /currencies endpoint(data->code)\nEx: USD\nDefault value: HOTEL(Property's Currency)",
                        "example_value": "",
                        "required": false
                    },
                    "countryFlag": {
                        "type": "String",
                        "description": "Country\ncountryFlag can be retrieved from /languages endpoint(data->countryFlag)\nEx: us\nDefault value: us",
                        "example_value": "",
                        "required": false
                    }
                },
                "required": [
                    "pickUpCoord",
                    "pickUpDate",
                    "pickUpTime",
                    "dropOffDate",
                    "dropOffTime"
                ]
            }
        },
        "static_response": null,
        "required": {
            "query": "I need to rent a car in New York City. I want to pick it up at the coordinates 40.7128,-74.0060 on June 10, 2025, at 09:00 AM and drop it off on June 15, 2025, at 05:00 PM. Can you help me find available options?",
            "params": {
                "pickUpCoord": "40.7128,-74.0060",
                "pickUpDate": "2025-06-10",
                "pickUpTime": "09:00",
                "dropOffDate": "2025-06-15",
                "dropOffTime": "17:00"
            },
            "response": {
                "data": null,
                "errors": {
                    "message": "metric is not a valid distance unit"
                },
                "status": false,
                "message": "Bad Request"
            }
        },
        "optional": {
            "query": "I need to rent a car in New York City. I want to pick it up at the coordinates 40.7128,-74.0060 on June 10, 2025, at 09:00 AM and drop it off on June 15, 2025, at 05:00 PM. I'd prefer an automatic transmission, air conditioning, and a medium-sized car. Also, I'd like the results sorted by price (lowest first), displayed in English, with prices in USD, and using metric units.",
            "params": {
                "pickUpCoord": "40.7128,-74.0060",
                "pickUpDate": "2025-06-10",
                "pickUpTime": "09:00",
                "dropOffDate": "2025-06-15",
                "dropOffTime": "17:00",
                "sortBy": "price_low_to_high",
                "carType": "carCategory::medium",
                "transmission": "transmission::AUTOMATIC",
                "hasAirConditioning": true,
                "units": "metric",
                "languageCode": "en-us",
                "currencyCode": "USD",
                "countryFlag": "us"
            },
            "response": {
                "data": null,
                "errors": {
                    "message": "metric is not a valid distance unit"
                },
                "status": false,
                "message": "Bad Request"
            }
        }
    },
    "row": {
        "required": {
            "data": null,
            "errors": {
                "message": "metric is not a valid distance unit"
            },
            "status": false,
            "message": "Bad Request"
        },
        "optional": {
            "data": null,
            "errors": {
                "message": "metric is not a valid distance unit"
            },
            "status": false,
            "message": "Bad Request"
        }
    }
}