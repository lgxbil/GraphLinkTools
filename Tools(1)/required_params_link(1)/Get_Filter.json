{
    "name": "Get_Filter",
    "docs_row": {
        "name": "Get_Filter",
        "endpoint": "/api/v1/hotels/getFilter",
        "func_description": "Get the `categories_filter` parameter value for `Search_Hotels` function. ",
        "parameters": {
            "type": "object",
            "properties": {
                "dest_id": {
                    "type": "String",
                    "description": "dest_id can be retrieved from api/v1/hotels/searchDestination(Search Hotel Destination) endpoint in Hotels collection.",
                    "example_value": "-2092174",
                    "required": true
                },
                "search_type": {
                    "type": "String",
                    "description": "search_type can be retrieved from api/v1/hotels/searchDestination(Search Hotel Destination) endpoint in hotel collection.",
                    "example_value": "CITY",
                    "required": true
                },
                "arrival_date": {
                    "type": "Date (yyyy-mm-dd)",
                    "description": "The date on which you will arrive or check-in",
                    "example_value": "",
                    "required": true
                },
                "departure_date": {
                    "type": "Date (yyyy-mm-dd)",
                    "description": "The date of departure or check-out.",
                    "example_value": "",
                    "required": true
                },
                "adults": {
                    "type": "Number",
                    "description": "The number of guests who are 18 years of age or older. The default value is set to 1.",
                    "example_value": "1",
                    "required": false
                },
                "children_age": {
                    "type": "String",
                    "description": "The number of children, including infants, who are under 18.\nExample:\nChild 1 Age = 8 months\nChild 2 Age = 1 year\nChild 3 Age = 17 years\nHere is what the request parameter would look like:\nchildren_age: 0,1,17",
                    "example_value": "1,17",
                    "required": false
                },
                "room_qty": {
                    "type": "Number",
                    "description": "The number of rooms that are required. The default value is set to 1.",
                    "example_value": "1",
                    "required": false
                },
                "categories_filter": {
                    "type": "String",
                    "description": "categories_filter can be retrieved from api/v1/hotels/getFilter(Get Filter) endpoint in Hotels collection.\nNote: For the initial request, leave it blank.",
                    "example_value": "",
                    "required": false
                },
                "languagecode": {
                    "type": "String",
                    "description": "To obtain the response data in a specific language, enter the languagecode. languagecode can be retrieved from api/v1/meta/getLanguages(Get Languages\n) endpoint in Meta collection.",
                    "example_value": "",
                    "required": false
                }
            },
            "required": [
                "dest_id",
                "search_type",
                "arrival_date",
                "departure_date"
            ]
        }
    },
    "instance": [],
    "category": null,
    "tool": null,
    "api_idx": 5,
    "params": {
        "type": "object",
        "properties": {
            "dest_id": {
                "type": "String",
                "description": "dest_id can be retrieved from api/v1/hotels/searchDestination(Search Hotel Destination) endpoint in Hotels collection.",
                "example_value": "-2092174",
                "required": true
            },
            "search_type": {
                "type": "String",
                "description": "search_type can be retrieved from api/v1/hotels/searchDestination(Search Hotel Destination) endpoint in hotel collection.",
                "example_value": "CITY",
                "required": true
            },
            "arrival_date": {
                "type": "Date (yyyy-mm-dd)",
                "description": "The date on which you will arrive or check-in",
                "example_value": "",
                "required": true
            },
            "departure_date": {
                "type": "Date (yyyy-mm-dd)",
                "description": "The date of departure or check-out.",
                "example_value": "",
                "required": true
            },
            "adults": {
                "type": "Number",
                "description": "The number of guests who are 18 years of age or older. The default value is set to 1.",
                "example_value": "1",
                "required": false
            },
            "children_age": {
                "type": "String",
                "description": "The number of children, including infants, who are under 18.\nExample:\nChild 1 Age = 8 months\nChild 2 Age = 1 year\nChild 3 Age = 17 years\nHere is what the request parameter would look like:\nchildren_age: 0,1,17",
                "example_value": "1,17",
                "required": false
            },
            "room_qty": {
                "type": "Number",
                "description": "The number of rooms that are required. The default value is set to 1.",
                "example_value": "1",
                "required": false
            },
            "categories_filter": {
                "type": "String",
                "description": "categories_filter can be retrieved from api/v1/hotels/getFilter(Get Filter) endpoint in Hotels collection.\nNote: For the initial request, leave it blank.",
                "example_value": "",
                "required": false
            },
            "languagecode": {
                "type": "String",
                "description": "To obtain the response data in a specific language, enter the languagecode. languagecode can be retrieved from api/v1/meta/getLanguages(Get Languages\n) endpoint in Meta collection.",
                "example_value": "",
                "required": false
            }
        },
        "required": [
            "dest_id",
            "search_type",
            "arrival_date",
            "departure_date"
        ]
    },
    "responses": [
        {
            "function_name": "Get_Filter",
            "arguments": {
                "dest_id": "-2092174",
                "search_type": "CITY",
                "arrival_date": "2025-06-10",
                "departure_date": "2025-06-15",
                "adults": 2,
                "children_age": "5,10",
                "room_qty": 1
            },
            "observation": {
                "pagination": {
                    "nbResultsTotal": 1466
                },
                "availabilityInfo": {
                    "totalAvailableNotAutoextended": 1211
                },
                "filters": [
                    {
                        "title": "Your budget (for 5 nights)",
                        "field": "price",
                        "filterStyle": "SLIDER",
                        "options": [],
                        "min": "1000",
                        "max": "60000",
                        "minPriceStep": "1000",
                        "minSelected": "0",
                        "histogram": [
                            7,
                            19
                        ],
                        "currency": "INR"
                    },
                    {
                        "title": "Popular filters",
                        "field": "popular",
                        "filterStyle": "CHECKBOX",
                        "options": [
                            {
                                "title": "Breakfast included",
                                "genericId": "mealplan::breakfast_included",
                                "countNotAutoextended": 523
                            },
                            {
                                "title": "South Mumbai",
                                "genericId": "district::2379",
                                "countNotAutoextended": 158
                            }
                        ]
                    }
                ]
            }
        }
    ],
    "response_summary": "The search results show a total of 1,466 accommodation options available, with 1,211 currently bookable without auto-extension. You can filter these options based on your budget, which ranges from \u20b91,000 to \u20b960,000 for a 5-night stay, with price steps starting at \u20b91,000.  \n\nPopular filters include 523 properties offering breakfast included, 158 located in South Mumbai, and 266 rated \"Very Good\" with a score of 8 or higher. For review scores, there are 892 properties rated \"Passable\" (5+), 724 rated \"Pleasant\" (6+), and 495 rated \"Good\" (7+). These filters help narrow down your choices based on preferences like location, amenities, and guest ratings.",
    "enhance_func_desc": "This API is ideal for travelers looking to refine their hotel search based on specific preferences. It retrieves available filters for accommodations, including price ranges, amenities, locations, and guest ratings, using destination ID and stay dates. Users can narrow results by budget, breakfast inclusion, or review scores. The response provides detailed filter options to help customize the search for the perfect stay. Destination ID must be obtained from the SearchDestination API.",
    "enhance_params_desc": {
        "enhanced_parameters": {
            "dest_id": "Unique destination identifier from SearchDestination API.",
            "search_type": "Specifies the type of search (e.g., CITY, REGION).",
            "arrival_date": "Check-in date for the hotel stay.",
            "departure_date": "Check-out date for the hotel stay.",
            "adults": "Number of adult guests (18+ years). Default is 1.",
            "children_age": "Ages of children (under 18) separated by commas.",
            "room_qty": "Number of rooms required. Default is 1.",
            "categories_filter": "Filters for hotel categories (e.g., amenities).",
            "languagecode": "Language preference for the response data."
        }
    },
    "enhance_resfield_desc": {
        "response_fields": {
            "pagination": {
                "type": "Object",
                "description": "Contains pagination information for the search results.",
                "ob_properties": {
                    "nbResultsTotal": {
                        "type": "Number",
                        "description": "The total number of accommodation options available (e.g., 1466)."
                    }
                }
            },
            "availabilityInfo": {
                "type": "Object",
                "description": "Contains information about the availability of accommodations.",
                "ob_properties": {
                    "totalAvailableNotAutoextended": {
                        "type": "Number",
                        "description": "The number of accommodations currently bookable without auto-extension (e.g., 1211)."
                    }
                }
            },
            "filters": {
                "type": "Array",
                "description": "A list of filters that can be applied to narrow down the search results.",
                "ar_items": {
                    "type": "Object",
                    "description": "An object representing a filter category.",
                    "ob_properties": {
                        "title": {
                            "type": "String",
                            "description": "The display name of the filter category (e.g., 'Your budget (for 5 nights)')."
                        },
                        "field": {
                            "type": "String",
                            "description": "The field name associated with the filter (e.g., 'price', 'popular')."
                        },
                        "filterStyle": {
                            "type": "String",
                            "description": "The style of the filter (e.g., 'SLIDER', 'CHECKBOX')."
                        },
                        "options": {
                            "type": "Array",
                            "description": "A list of filter options available within the category.",
                            "ar_items": {
                                "type": "Object",
                                "description": "An object representing a filter option.",
                                "ob_properties": {
                                    "title": {
                                        "type": "String",
                                        "description": "The display name of the filter option (e.g., 'Breakfast included')."
                                    },
                                    "genericId": {
                                        "type": "String",
                                        "description": "A unique identifier for the filter option (e.g., 'mealplan::breakfast_included')."
                                    },
                                    "countNotAutoextended": {
                                        "type": "Number",
                                        "description": "The number of accommodations matching this filter option (e.g., 523)."
                                    }
                                }
                            }
                        },
                        "min": {
                            "type": "String",
                            "description": "The minimum value for the filter (e.g., '1000' for price)."
                        },
                        "max": {
                            "type": "String",
                            "description": "The maximum value for the filter (e.g., '60000' for price)."
                        },
                        "minPriceStep": {
                            "type": "String",
                            "description": "The minimum step size for the filter (e.g., '1000' for price)."
                        },
                        "minSelected": {
                            "type": "String",
                            "description": "The minimum selected value for the filter (e.g., '0')."
                        },
                        "histogram": {
                            "type": "Array",
                            "description": "A list of values representing the distribution of accommodations across the filter range.",
                            "ar_items": {
                                "type": "Number",
                                "description": "A count of accommodations within a specific range of the filter."
                            }
                        },
                        "currency": {
                            "type": "String",
                            "description": "The currency used for the filter (e.g., 'INR')."
                        }
                    }
                }
            }
        }
    },
    "params_desc_list": null,
    "response_desc_list": [
        {
            "path_name": "$.pagination",
            "name": "pagination",
            "description": "Contains pagination information for the search results."
        },
        {
            "path_name": "$.pagination.nbResultsTotal",
            "name": "nbResultsTotal",
            "description": "The total number of accommodation options available (e.g., 1466)."
        },
        {
            "path_name": "$.availabilityInfo",
            "name": "availabilityInfo",
            "description": "Contains information about the availability of accommodations."
        },
        {
            "path_name": "$.availabilityInfo.totalAvailableNotAutoextended",
            "name": "totalAvailableNotAutoextended",
            "description": "The number of accommodations currently bookable without auto-extension (e.g., 1211)."
        },
        {
            "path_name": "$.filters",
            "name": "filters",
            "description": "A list of filters that can be applied to narrow down the search results."
        },
        {
            "path_name": "$.filters[]",
            "name": "filters[]",
            "description": "An object representing a filter category."
        },
        {
            "path_name": "$.filters[].title",
            "name": "title",
            "description": "The display name of the filter category (e.g., 'Your budget (for 5 nights)')."
        },
        {
            "path_name": "$.filters[].field",
            "name": "field",
            "description": "The field name associated with the filter (e.g., 'price', 'popular')."
        },
        {
            "path_name": "$.filters[].filterStyle",
            "name": "filterStyle",
            "description": "The style of the filter (e.g., 'SLIDER', 'CHECKBOX')."
        },
        {
            "path_name": "$.filters[].options",
            "name": "options",
            "description": "A list of filter options available within the category."
        },
        {
            "path_name": "$.filters[].options[]",
            "name": "options[]",
            "description": "An object representing a filter option."
        },
        {
            "path_name": "$.filters[].options[].title",
            "name": "title",
            "description": "The display name of the filter option (e.g., 'Breakfast included')."
        },
        {
            "path_name": "$.filters[].options[].genericId",
            "name": "genericId",
            "description": "A unique identifier for the filter option (e.g., 'mealplan::breakfast_included')."
        },
        {
            "path_name": "$.filters[].options[].countNotAutoextended",
            "name": "countNotAutoextended",
            "description": "The number of accommodations matching this filter option (e.g., 523)."
        },
        {
            "path_name": "$.filters[].min",
            "name": "min",
            "description": "The minimum value for the filter (e.g., '1000' for price)."
        },
        {
            "path_name": "$.filters[].max",
            "name": "max",
            "description": "The maximum value for the filter (e.g., '60000' for price)."
        },
        {
            "path_name": "$.filters[].minPriceStep",
            "name": "minPriceStep",
            "description": "The minimum step size for the filter (e.g., '1000' for price)."
        },
        {
            "path_name": "$.filters[].minSelected",
            "name": "minSelected",
            "description": "The minimum selected value for the filter (e.g., '0')."
        },
        {
            "path_name": "$.filters[].histogram",
            "name": "histogram",
            "description": "A list of values representing the distribution of accommodations across the filter range."
        },
        {
            "path_name": "$.filters[].histogram[]",
            "name": "histogram[]",
            "description": "A count of accommodations within a specific range of the filter."
        },
        {
            "path_name": "$.filters[].currency",
            "name": "currency",
            "description": "The currency used for the filter (e.g., 'INR')."
        }
    ],
    "depends_on": [
        {
            "target_api_params": "dest_id",
            "reason": "The 'dest_id' parameter in the target API requires a unique destination identifier, which can be obtained from the 'dest_id' field in the source API's response. The data types match (both are strings), and the source API provides exact destination IDs for nearby cities, making it a valid prerequisite for the target API.",
            "source_jsonpath": "$[*].dest_id",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Get_Nearby_Cities"
        },
        {
            "target_api_params": "dest_id",
            "reason": "The 'dest_id' parameter in the target API requires a unique destination identifier, which is exactly what the 'dest_id' field in the source API response provides. The data types match (both are strings), and the source API is specifically designed to retrieve destination information, making it a necessary prerequisite for calling the target API.",
            "source_jsonpath": "$[*].dest_id",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Hotel_Destination"
        },
        {
            "target_api_params": "dest_id",
            "reason": "The 'dest_id' parameter in the target API requires a unique destination identifier from the SearchDestination API. The source API's 'ufi' field in the 'ufiDetails' object provides a unique location identifier (e.g., '-2092174') which matches the example value in the target API documentation. This creates a potential business association where a traveler might search for attractions in a location and then look for hotels in the same location.",
            "source_jsonpath": "$.products[].ufiDetails.ufi",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Attractions"
        },
        {
            "target_api_params": "dest_id",
            "reason": "The 'dest_id' parameter in the target API is a unique destination identifier that must be obtained from the SearchDestination API. The source API's response fields do not provide a 'dest_id' directly, but they do include a 'ufi' field which appears to be a unique identifier for the destination (e.g., -2092174). This matches the example value provided in the target API documentation. The data types are compatible (both are numeric identifiers), and the 'ufi' field is logically related to the destination ID required by the target API.",
            "source_jsonpath": "$.hotels[*].property.ufi",
            "confidence": 95,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Hotels"
        },
        {
            "target_api_params": "search_type",
            "reason": "The 'search_type' parameter in the target API specifies the type of search (e.g., CITY, REGION). The source API's response includes a 'search_type' field (e.g., 'city', 'district') which directly matches the required parameter. The data types and meanings align perfectly, making this a clear match.",
            "source_jsonpath": "$[*].search_type",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Hotel_Destination"
        },
        {
            "target_api_params": "search_type",
            "reason": "The 'search_type' parameter in the target API specifies the type of search (e.g., CITY, REGION). The source API's response includes a 'dest_type' field which indicates the type of destination (e.g., 'city'). This field can be used to determine the search_type for the target API, as it directly relates to the type of destination being searched. The data types match (both are strings), and the context is appropriate for determining the search type.",
            "source_jsonpath": "$[*].dest_type",
            "confidence": 95,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Get_Nearby_Cities"
        },
        {
            "target_api_params": "search_type",
            "reason": "The 'search_type' parameter in the target API specifies the type of search (e.g., CITY, REGION). The source API's response fields include 'type' which indicates whether the location is a city or an airport. This creates a potential business association where the type of location from the car rental search could influence the type of hotel search.",
            "source_jsonpath": "$[*].type",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Car_Auto-Complete"
        },
        {
            "target_api_params": "search_type",
            "reason": "The 'search_type' parameter in the target API specifies the type of search (e.g., CITY, REGION). The source API's 'type' field in the response provides the type of location (e.g., CITY, AIRPORT). The data types match (both are strings), and the values from the source API can directly serve as input for the target API's 'search_type' parameter. This creates a potential business association where the type of location from the flight search can be used to filter hotel searches.",
            "source_jsonpath": "$[*].type",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Flight_Location"
        },
        {
            "target_api_params": "arrival_date",
            "reason": "The 'arrival_date' parameter in the target API requires a check-in date for the hotel stay. The source API's 'arrival_date' parameter is also a check-in date for the hotel stay, matching both in purpose and data type (yyyy-mm-dd). This creates a direct prerequisite relationship where the same date is used for both APIs.",
            "source_jsonpath": "$.arrival_date",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Get_Room_List"
        },
        {
            "target_api_params": "arrival_date",
            "reason": "The 'arrival_date' parameter in the target API requires a check-in date for the hotel stay. The source API's 'stayed_room_info.checkin' field provides the exact check-in date (e.g., '2025-05-08') from previous guest stays. This creates a potential business association where a traveler might want to check in on the same date as previous guests who left positive reviews.",
            "source_jsonpath": "$.result[*].stayed_room_info.checkin",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Get_Hotel_Reviews(Tips)"
        },
        {
            "target_api_params": "arrival_date",
            "reason": "The 'arrival_date' parameter in the target API requires a check-in date for the hotel stay. The source API's 'checkinDate' field in the hotel property details provides the exact check-in date (e.g., '2025-06-10'). The data types match (both are in 'yyyy-mm-dd' format), and this creates a direct business association where the check-in date from a hotel search can be used to retrieve filters for that specific date.",
            "source_jsonpath": "$.hotels[].property.checkinDate",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Hotels"
        },
        {
            "target_api_params": "arrival_date",
            "reason": "The 'arrival_date' parameter in the target API requires a check-in date for the hotel stay. The source API's 'arrival_date' parameter also requires a check-in date for hotel searches. Both parameters have the same data type (Date in yyyy-mm-dd format) and serve the same purpose in the context of hotel bookings. This creates a direct match where the source API's parameter can be used as input for the target API's parameter.",
            "source_jsonpath": "$.parameters.properties.arrival_date",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Hotels_By_Coordinates"
        },
        {
            "target_api_params": "arrival_date",
            "reason": "The 'arrival_date' parameter in the target API requires a check-in date for the hotel stay. The source API's 'date' field in 'lengthsOfStay' provides specific dates (e.g., '2025-06-10'). The data types match (both are in 'yyyy-mm-dd' format), and the dates can be directly used as the arrival date for the hotel stay.",
            "source_jsonpath": "$.lengthsOfStay[*].date",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Get_Room_Availability"
        },
        {
            "target_api_params": "arrival_date",
            "reason": "The 'arrival_date' parameter in the target API requires a specific check-in date for hotel stays. The source API's 'date' field in the availability calendar provides specific dates (e.g., '2025-05-19'). The data types match (both are in 'yyyy-mm-dd' format), and there is a potential business association where a traveler might want to check hotel availability on the same dates as attraction availability.",
            "source_jsonpath": "$[*].date",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Get_Availability_Calendar"
        },
        {
            "target_api_params": "arrival_date",
            "reason": "The 'arrival_date' parameter in the target API requires the check-in date for the hotel stay. The source API's 'departureDate' field provides the departure date for flights, which could be used to infer the hotel check-in date if the traveler plans to stay at the destination after the flight arrives. The data types match (both are in 'yyyy-mm-dd' format). This creates a potential business association where a traveler books a hotel starting from the day they arrive at their destination.",
            "source_jsonpath": "$[*].departureDate",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Get_Min_Price"
        },
        {
            "target_api_params": "departure_date",
            "reason": "The 'departure_date' parameter in the target API requires a check-out date for the hotel stay in the format 'yyyy-mm-dd'. The source API's 'departure_date' field in the response provides the exact check-out date in the same format. This creates a direct match where the check-out date from the room list can be used to filter hotels in the target API.",
            "source_jsonpath": "$.departure_date",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Get_Room_List"
        },
        {
            "target_api_params": "departure_date",
            "reason": "The 'departure_date' parameter in the target API requires the check-out date for the hotel stay. The source API's 'stayed_room_info.checkout' field provides the exact check-out date (e.g., '2025-05-09'). The data types match (both are in 'yyyy-mm-dd' format), and the field directly corresponds to the check-out date of a hotel stay, which is exactly what the target API parameter requires.",
            "source_jsonpath": "$.result[].stayed_room_info.checkout",
            "confidence": 95,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Get_Hotel_Reviews(Tips)"
        },
        {
            "target_api_params": "departure_date",
            "reason": "The 'departure_date' parameter in the target API requires the check-out date for the hotel stay. The source API's 'avDates' field provides available dates and prices for a hotel, which includes the check-out date. The data types match (both are in 'yyyy-mm-dd' format), and the context suggests that the check-out date from the source API can be used as the departure date for the target API.",
            "source_jsonpath": "$.avDates[].date",
            "confidence": 95,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Get_Room_Availability"
        },
        {
            "target_api_params": "departure_date",
            "reason": "The 'departure_date' parameter in the target API requires the check-out date for a hotel stay. The source API's 'returnDate' field provides the return date for a flight, which could logically coincide with the hotel check-out date if the traveler is booking a hotel for the duration of their trip. The data types match (both are in 'yyyy-mm-dd' format), and the scenario where a traveler checks out of their hotel on the same day they return from their flight is plausible.",
            "source_jsonpath": "$[*].returnDate",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Get_Min_Price_Multi_Stops"
        },
        {
            "target_api_params": "departure_date",
            "reason": "The 'departure_date' parameter in the target API requires the check-out date for the hotel stay. The source API's 'checkoutDate' field in the hotel property details provides the exact check-out date (e.g., '2025-06-15'). The data types match (both are in 'yyyy-mm-dd' format), and the field directly corresponds to the target parameter's requirement.",
            "source_jsonpath": "$.hotels[].property.checkoutDate",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Hotels"
        },
        {
            "target_api_params": "departure_date",
            "reason": "The 'departure_date' parameter in the target API requires the check-out date for a hotel stay. The source API's 'returnDate' field provides the return date for a flight, which could be used to determine the hotel check-out date if the traveler plans to stay until their return flight. The data types match (both are in 'yyyy-mm-dd' format), and there is a logical business association where a traveler might want to check out of their hotel on the same day as their return flight.",
            "source_jsonpath": "$.returnDate",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Flights"
        }
    ],
    "verified": true
}