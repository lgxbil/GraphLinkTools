{
    "name": "Get_Min_Price_Multi_Stops",
    "docs_row": {
        "name": "Get_Min_Price_Multi_Stops",
        "endpoint": "/api/v1/flights/getMinPriceMultiStops",
        "func_description": "Get the minimum price for multi-stop flights. This API will return the lowest priced flights within 5 days before and after the query date. ",
        "parameters": {
            "type": "object",
            "properties": {
                "legs": {
                    "type": "String",
                    "description": "The legs must contain the fromId, toId and date in object format and must be passed in an array.\nEXAMPLE:\n[\n{\n'fromId': 'BOM.AIRPORT',\n'toId': 'AMD.AIRPORT',\n'date': '2024-05-25'\n},\n\u2026\n]\nNote: If there are multiple stops, there should be more leg objects in the array.",
                    "example_value": "[{'fromId':'BOM.AIRPORT','toId':'AMD.AIRPORT','date':'2024-05-25'},{'fromId':'AMD.AIRPORT','toId':'BOM.AIRPORT','date':'2024-05-26'}]",
                    "required": true
                },
                "cabinClass": {
                    "type": "String",
                    "description": "Search for flights that match the cabin class specified. Cabin call can be either ECONOMY, PREMIUM_ECONOMY, BUSINESS or FIRST.",
                    "example_value": "ECONOMY,PREMIUM_ECONOMY,BUSINESS,FIRST",
                    "required": false
                },
                "currency_code": {
                    "type": "String",
                    "description": "The currency code. currency_code can be retrieved from api/v1/meta/getCurrency(Get Currency) endpoint in Hotels collection.",
                    "example_value": "AED",
                    "required": false
                }
            },
            "required": [
                "legs"
            ]
        }
    },
    "instance": [],
    "category": null,
    "tool": null,
    "api_idx": 10,
    "params": {
        "type": "object",
        "properties": {
            "legs": {
                "type": "String",
                "description": "The legs must contain the fromId, toId and date in object format and must be passed in an array.\nEXAMPLE:\n[\n{\n'fromId': 'BOM.AIRPORT',\n'toId': 'AMD.AIRPORT',\n'date': '2024-05-25'\n},\n\u2026\n]\nNote: If there are multiple stops, there should be more leg objects in the array.",
                "example_value": "[{'fromId':'BOM.AIRPORT','toId':'AMD.AIRPORT','date':'2024-05-25'},{'fromId':'AMD.AIRPORT','toId':'BOM.AIRPORT','date':'2024-05-26'}]",
                "required": true
            },
            "cabinClass": {
                "type": "String",
                "description": "Search for flights that match the cabin class specified. Cabin call can be either ECONOMY, PREMIUM_ECONOMY, BUSINESS or FIRST.",
                "example_value": "ECONOMY,PREMIUM_ECONOMY,BUSINESS,FIRST",
                "required": false
            },
            "currency_code": {
                "type": "String",
                "description": "The currency code. currency_code can be retrieved from api/v1/meta/getCurrency(Get Currency) endpoint in Hotels collection.",
                "example_value": "AED",
                "required": false
            }
        },
        "required": [
            "legs"
        ]
    },
    "responses": [
        {
            "function_name": "Get_Min_Price_Multi_Stops",
            "arguments": {
                "legs": "[{'fromId':'BOM.AIRPORT','toId':'AMD.AIRPORT','date':'2025-05-25'},{'fromId':'AMD.AIRPORT','toId':'BOM.AIRPORT','date':'2025-05-26'}]",
                "cabinClass": "ECONOMY",
                "currency_code": "USD"
            },
            "observation": [
                {
                    "departureDate": "2025-05-20",
                    "returnDate": "2025-05-21",
                    "searchDates": [
                        "2025-05-20",
                        "2025-05-21"
                    ],
                    "offsetDays": -5,
                    "accuracyTrackerId": "01kp0_kh0lPPIRVopJAx0KlSJPiyn1JAmIELUpvH9NCuY4SiY3adyjQnJkK8uoJe",
                    "isCheapest": false,
                    "price": {
                        "currencyCode": "USD",
                        "units": 94,
                        "nanos": 810000000
                    },
                    "priceRounded": {
                        "currencyCode": "USD",
                        "units": 95,
                        "nanos": 0
                    }
                },
                {
                    "departureDate": "2025-05-21",
                    "returnDate": "2025-05-22",
                    "searchDates": [
                        "2025-05-21",
                        "2025-05-22"
                    ],
                    "offsetDays": -4,
                    "accuracyTrackerId": "01kp0_kh0lPPIRVopJAx0JpIuffxg44UQYZfQhxoFrrpZ0YuUes_SpyIkdAzNhAF",
                    "isCheapest": false,
                    "price": {
                        "currencyCode": "USD",
                        "units": 101,
                        "nanos": 680000000
                    },
                    "priceRounded": {
                        "currencyCode": "USD",
                        "units": 102,
                        "nanos": 0
                    }
                },
                {
                    "departureDate": "2025-05-22",
                    "returnDate": "2025-05-23",
                    "searchDates": [
                        "2025-05-22",
                        "2025-05-23"
                    ],
                    "offsetDays": -3,
                    "accuracyTrackerId": "01kp0_kh0lPPIRVopJAx0KlSJPiyn1JAmIELUpvH9NCuY4SiY3adyjQnJkK8uoJe",
                    "isCheapest": false,
                    "price": {
                        "currencyCode": "USD",
                        "units": 94,
                        "nanos": 810000000
                    },
                    "priceRounded": {
                        "currencyCode": "USD",
                        "units": 95,
                        "nanos": 0
                    }
                }
            ]
        }
    ],
    "response_summary": "Here are the flight options available for your selected dates in May 2025. The first option departs on May 20th and returns on May 21st, priced at approximately $94.81 (rounded to $95). The second option departs a day later on May 21st and returns on May 22nd, costing around $101.68 (rounded to $102). The third option, departing on May 22nd and returning on May 23rd, is priced the same as the first option at $94.81 (rounded to $95). None of these options are marked as the cheapest available, but they provide flexibility with slight variations in pricing for different travel dates. All prices are listed in USD.",
    "enhance_func_desc": "This API is ideal for travelers planning multi-stop flights. It retrieves the minimum flight prices for specified routes and dates, with options to filter by cabin class. Users input departure/arrival locations and dates for each leg of their journey. The response includes pricing details for different travel dates, helping users compare costs and choose optimal itineraries. Prices can be displayed in various currencies.",
    "enhance_params_desc": {
        "enhanced_parameters": {
            "legs": "Array of flight segments with departure/arrival locations and dates for each leg.",
            "cabinClass": "Filters flights by seating class (Economy, Premium, Business, First).",
            "currency_code": "Currency for displaying flight prices (e.g., USD, AED)."
        }
    },
    "enhance_resfield_desc": {
        "response_fields": [
            {
                "departureDate": {
                    "type": "Date",
                    "description": "The date when the flight departs, formatted as YYYY-MM-DD."
                },
                "returnDate": {
                    "type": "Date",
                    "description": "The date when the flight returns, formatted as YYYY-MM-DD."
                },
                "searchDates": {
                    "type": "Array",
                    "description": "A list of dates relevant to the flight search, formatted as YYYY-MM-DD.",
                    "ar_items": {
                        "type": "Date",
                        "description": "A specific date included in the search criteria."
                    }
                },
                "offsetDays": {
                    "type": "Number",
                    "description": "The number of days offset from a reference date (e.g., -5, -4, -3)."
                },
                "accuracyTrackerId": {
                    "type": "String",
                    "description": "A unique identifier used for tracking the accuracy of the flight search results."
                },
                "isCheapest": {
                    "type": "Boolean",
                    "description": "Indicates whether this flight option is the cheapest available (false in all provided examples)."
                },
                "price": {
                    "type": "Object",
                    "description": "The exact price of the flight, broken down into currency and subunits.",
                    "ob_properties": {
                        "currencyCode": {
                            "type": "String",
                            "description": "The currency in which the price is quoted (e.g., 'USD')."
                        },
                        "units": {
                            "type": "Number",
                            "description": "The whole number part of the price (e.g., 94, 101)."
                        },
                        "nanos": {
                            "type": "Number",
                            "description": "The fractional part of the price, represented in nanoseconds (e.g., 810000000 for $0.81)."
                        }
                    }
                },
                "priceRounded": {
                    "type": "Object",
                    "description": "The rounded price of the flight, for display purposes.",
                    "ob_properties": {
                        "currencyCode": {
                            "type": "String",
                            "description": "The currency in which the rounded price is quoted (e.g., 'USD')."
                        },
                        "units": {
                            "type": "Number",
                            "description": "The whole number part of the rounded price (e.g., 95, 102)."
                        },
                        "nanos": {
                            "type": "Number",
                            "description": "The fractional part of the rounded price, typically zero (e.g., 0)."
                        }
                    }
                }
            }
        ]
    },
    "params_desc_list": null,
    "response_desc_list": [
        {
            "path_name": "$[].departureDate",
            "name": "departureDate",
            "description": "The date when the flight departs, formatted as YYYY-MM-DD."
        },
        {
            "path_name": "$[].returnDate",
            "name": "returnDate",
            "description": "The date when the flight returns, formatted as YYYY-MM-DD."
        },
        {
            "path_name": "$[].searchDates",
            "name": "searchDates",
            "description": "A list of dates relevant to the flight search, formatted as YYYY-MM-DD."
        },
        {
            "path_name": "$[].searchDates[]",
            "name": "searchDates[]",
            "description": "A specific date included in the search criteria."
        },
        {
            "path_name": "$[].offsetDays",
            "name": "offsetDays",
            "description": "The number of days offset from a reference date (e.g., -5, -4, -3)."
        },
        {
            "path_name": "$[].accuracyTrackerId",
            "name": "accuracyTrackerId",
            "description": "A unique identifier used for tracking the accuracy of the flight search results."
        },
        {
            "path_name": "$[].isCheapest",
            "name": "isCheapest",
            "description": "Indicates whether this flight option is the cheapest available (false in all provided examples)."
        },
        {
            "path_name": "$[].price",
            "name": "price",
            "description": "The exact price of the flight, broken down into currency and subunits."
        },
        {
            "path_name": "$[].price.currencyCode",
            "name": "currencyCode",
            "description": "The currency in which the price is quoted (e.g., 'USD')."
        },
        {
            "path_name": "$[].price.units",
            "name": "units",
            "description": "The whole number part of the price (e.g., 94, 101)."
        },
        {
            "path_name": "$[].price.nanos",
            "name": "nanos",
            "description": "The fractional part of the price, represented in nanoseconds (e.g., 810000000 for $0.81)."
        },
        {
            "path_name": "$[].priceRounded",
            "name": "priceRounded",
            "description": "The rounded price of the flight, for display purposes."
        },
        {
            "path_name": "$[].priceRounded.currencyCode",
            "name": "currencyCode",
            "description": "The currency in which the rounded price is quoted (e.g., 'USD')."
        },
        {
            "path_name": "$[].priceRounded.units",
            "name": "units",
            "description": "The whole number part of the rounded price (e.g., 95, 102)."
        },
        {
            "path_name": "$[].priceRounded.nanos",
            "name": "nanos",
            "description": "The fractional part of the rounded price, typically zero (e.g., 0)."
        }
    ],
    "depends_on": [
        {
            "target_api_params": "legs",
            "reason": "The 'legs' parameter in the target API requires an array of flight segments with departure/arrival locations and dates. The source API's 'segments' field in flight offers provides detailed information about each segment including departure and arrival airports and times. This matches the structure needed for the 'legs' parameter, making it a suitable input.",
            "source_jsonpath": "$.flightOffers[*].segments[*]",
            "confidence": 95,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Flights"
        },
        {
            "target_api_params": "legs",
            "reason": "The 'legs' parameter in the target API requires an array of flight segments with departure/arrival locations and dates for each leg. The source API's 'segments' field in flight offers provides exactly this information, including 'fromId', 'toId', and 'date' in the required format. This creates a direct match where the source API's response can be used as input for the target API.",
            "source_jsonpath": "$.flightOffers[*].segments[*]",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Flights_Multi_Stops"
        }
    ],
    "verified": true
}