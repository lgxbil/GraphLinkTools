{
    "name": "Search_Attractions",
    "docs_row": {
        "name": "Search_Attractions",
        "endpoint": "/api/v1/attraction/searchAttractions",
        "func_description": "Search Attraction by trending/attr_book_score/lowest_price. ",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "String",
                    "description": "id can be retrieved from api/v1/attraction/searchLocation(Search Attraction Location) endpoint in Attraction collection as id inside products or destinations.",
                    "example_value": "eyJ1ZmkiOi0yMDkyMTc0fQ==",
                    "required": true
                },
                "startDate": {
                    "type": "Date (yyyy-mm-dd)",
                    "description": "Sort the data by the start date.",
                    "example_value": "",
                    "required": false
                },
                "endDate": {
                    "type": "Date (yyyy-mm-dd)",
                    "description": "Sort the data by the end date.",
                    "example_value": "",
                    "required": false
                },
                "sortBy": {
                    "type": "Enum",
                    "description": "This parameter orders result by trending, attr_book_score or lowest_price.",
                    "example_value": "",
                    "required": false
                },
                "page": {
                    "type": "Number",
                    "description": "The page number.",
                    "example_value": "1",
                    "required": false
                },
                "currency_code": {
                    "type": "String",
                    "description": "The currency code. currency_code can be retrieved from api/v1/meta/getCurrency(Get Currency) endpoint in Hotels collection.",
                    "example_value": "INR",
                    "required": false
                },
                "languagecode": {
                    "type": "String",
                    "description": "To obtain the response data in a specific language, enter the languagecode. languagecode can be retrieved from api/v1/meta/getLanguages(Get Languages\n) endpoint in Meta collection.",
                    "example_value": "en-us",
                    "required": false
                },
                "typeFilters": {
                    "type": "String",
                    "description": "typeFilters can be retrieved from /api/v1/attraction/searchAttractions(Search Attractions) endpoint in Hotels collection. data->filterOptions-> typeFilters[]-> tagname.\nNote:- typeFilters should be separated by commas if passing multiple values.\nExample: tag1,tag2,tag",
                    "example_value": "",
                    "required": false
                },
                "priceFilters": {
                    "type": "String",
                    "description": "priceFilters can be retrieved from /api/v1/attraction/searchAttractions(Search Attractions) endpoint in Hotels collection. data->filterOptions-> priceFilters[]-> tagname.\nNote:- priceFilters should be separated by commas if passing multiple values.\nExample: tag1,tag2,tag",
                    "example_value": "",
                    "required": false
                },
                "ufiFilters": {
                    "type": "String",
                    "description": "ufiFilters can be retrieved from /api/v1/attraction/searchAttractions(Search Attractions) endpoint in Hotels collection. data->filterOptions-> ufiFilters[]-> tagname.\nNote:- ufiFilters should be separated by commas if passing multiple values.\nExample: tag1,tag2,tag",
                    "example_value": "",
                    "required": false
                },
                "labelFilters": {
                    "type": "String",
                    "description": "labelFilters can be retrieved from /api/v1/attraction/searchAttractions(Search Attractions) endpoint in Hotels collection. data->filterOptions-> labelFilters[]-> tagname.\nNote:- labelFilters should be separated by commas if passing multiple values.\nExample: tag1,tag2,tag",
                    "example_value": "",
                    "required": false
                }
            },
            "required": [
                "id"
            ]
        }
    },
    "instance": [],
    "category": null,
    "tool": null,
    "api_idx": 37,
    "params": {
        "type": "object",
        "properties": {
            "id": {
                "type": "String",
                "description": "id can be retrieved from api/v1/attraction/searchLocation(Search Attraction Location) endpoint in Attraction collection as id inside products or destinations.",
                "example_value": "eyJ1ZmkiOi0yMDkyMTc0fQ==",
                "required": true
            },
            "startDate": {
                "type": "Date (yyyy-mm-dd)",
                "description": "Sort the data by the start date.",
                "example_value": "",
                "required": false
            },
            "endDate": {
                "type": "Date (yyyy-mm-dd)",
                "description": "Sort the data by the end date.",
                "example_value": "",
                "required": false
            },
            "sortBy": {
                "type": "Enum",
                "description": "This parameter orders result by trending, attr_book_score or lowest_price.",
                "example_value": "",
                "required": false
            },
            "page": {
                "type": "Number",
                "description": "The page number.",
                "example_value": "1",
                "required": false
            },
            "currency_code": {
                "type": "String",
                "description": "The currency code. currency_code can be retrieved from api/v1/meta/getCurrency(Get Currency) endpoint in Hotels collection.",
                "example_value": "INR",
                "required": false
            },
            "languagecode": {
                "type": "String",
                "description": "To obtain the response data in a specific language, enter the languagecode. languagecode can be retrieved from api/v1/meta/getLanguages(Get Languages\n) endpoint in Meta collection.",
                "example_value": "en-us",
                "required": false
            },
            "typeFilters": {
                "type": "String",
                "description": "typeFilters can be retrieved from /api/v1/attraction/searchAttractions(Search Attractions) endpoint in Hotels collection. data->filterOptions-> typeFilters[]-> tagname.\nNote:- typeFilters should be separated by commas if passing multiple values.\nExample: tag1,tag2,tag",
                "example_value": "",
                "required": false
            },
            "priceFilters": {
                "type": "String",
                "description": "priceFilters can be retrieved from /api/v1/attraction/searchAttractions(Search Attractions) endpoint in Hotels collection. data->filterOptions-> priceFilters[]-> tagname.\nNote:- priceFilters should be separated by commas if passing multiple values.\nExample: tag1,tag2,tag",
                "example_value": "",
                "required": false
            },
            "ufiFilters": {
                "type": "String",
                "description": "ufiFilters can be retrieved from /api/v1/attraction/searchAttractions(Search Attractions) endpoint in Hotels collection. data->filterOptions-> ufiFilters[]-> tagname.\nNote:- ufiFilters should be separated by commas if passing multiple values.\nExample: tag1,tag2,tag",
                "example_value": "",
                "required": false
            },
            "labelFilters": {
                "type": "String",
                "description": "labelFilters can be retrieved from /api/v1/attraction/searchAttractions(Search Attractions) endpoint in Hotels collection. data->filterOptions-> labelFilters[]-> tagname.\nNote:- labelFilters should be separated by commas if passing multiple values.\nExample: tag1,tag2,tag",
                "example_value": "",
                "required": false
            }
        },
        "required": [
            "id"
        ]
    },
    "responses": [
        {
            "function_name": "Search_Attractions",
            "arguments": {
                "id": "eyJ1ZmkiOi0yMDkyMTc0fQ==",
                "sortBy": "attr_book_score"
            },
            "observation": {
                "__typename": "AttractionsProductSearchResponse",
                "products": [
                    {
                        "__typename": "AttractionsProduct",
                        "cancellationPolicy": {
                            "__typename": "AttractionsCancellationPolicy",
                            "hasFreeCancellation": true
                        },
                        "id": "PR6K7ZswbGBs",
                        "name": "Dharavi, Dhobighat, and Mumbai Dabbawallas",
                        "slug": "pr6k7zswbgbs-mumbai-half-day-tour",
                        "shortDescription": "A must do tour of Mumbai. This is an off-beat 3.5hours tour where you will see Mumbai from a wide...",
                        "representativePrice": {
                            "__typename": "AttractionsPrice",
                            "chargeAmount": 18,
                            "currency": "USD",
                            "publicAmount": 20
                        },
                        "primaryPhoto": {
                            "__typename": "AttractionsPhoto",
                            "small": "https://q-xx.bstatic.com/xdata/images/xphoto/300x320/142005970.jpg?k=37a8dd22f2f1edb579fabb00c4d740c88e6103f7d47ba7e491e4cc3afa1bb862&o="
                        },
                        "reviewsStats": {
                            "__typename": "AttractionsProductReviewStats",
                            "allReviewsCount": 3,
                            "percentage": "67%",
                            "combinedNumericStats": {
                                "__typename": "AttractionsProductCombinedReviewStats",
                                "average": 4.8,
                                "total": 83
                            }
                        },
                        "ufiDetails": {
                            "__typename": "AttractionLocationResponse",
                            "bCityName": "Mumbai",
                            "ufi": -2092174,
                            "url": {
                                "__typename": "AttractionLocationUrl",
                                "country": "in"
                            }
                        },
                        "offers": [
                            {
                                "__typename": "Offer",
                                "items": [
                                    {
                                        "__typename": "OfferItem",
                                        "id": "OIEnoHP8TJsB"
                                    }
                                ]
                            },
                            {
                                "__typename": "Offer",
                                "items": [
                                    {
                                        "__typename": "OfferItem",
                                        "id": "OIMyfydyr7zh"
                                    }
                                ]
                            }
                        ],
                        "supportedFeatures": {
                            "__typename": "AttractionsProductSupportedFeatures",
                            "nativeApp": true
                        },
                        "flags": [
                            {
                                "__typename": "AttractionsProductFlags",
                                "flag": "bestseller",
                                "value": true,
                                "rank": 1
                            }
                        ]
                    },
                    {
                        "__typename": "AttractionsProduct",
                        "cancellationPolicy": {
                            "__typename": "AttractionsCancellationPolicy",
                            "hasFreeCancellation": true
                        },
                        "id": "PRBQwxzOgXpj",
                        "name": "Private Mumbai City Sightseeing Tour with Guide",
                        "slug": "prbqwxzogxpj-private-mumbai-city-sightseeing-tour-with-guide",
                        "shortDescription": "Uncover hidden gems with our local experts, offering a truly authentic Mumbai experience\nEnjoy pe...",
                        "representativePrice": {
                            "__typename": "AttractionsPrice",
                            "chargeAmount": 66.48,
                            "currency": "USD",
                            "publicAmount": 66.48
                        },
                        "primaryPhoto": {
                            "__typename": "AttractionsPhoto",
                            "small": "https://r-xx.bstatic.com/xdata/images/xphoto/300x320/457652738.jpg?k=6cd35a3890da9b6fb2cba37aa41284e3d1e0d8d5cf12b29639c3a9f16c3ff41e&o="
                        },
                        "reviewsStats": {
                            "__typename": "AttractionsProductReviewStats",
                            "allReviewsCount": 0,
                            "percentage": "0",
                            "combinedNumericStats": {
                                "__typename": "AttractionsProductCombinedReviewStats",
                                "average": 5,
                                "total": 3
                            }
                        },
                        "ufiDetails": {
                            "__typename": "AttractionLocationResponse",
                            "bCityName": "Mumbai",
                            "ufi": -2092174,
                            "url": {
                                "__typename": "AttractionLocationUrl",
                                "country": "in"
                            }
                        },
                        "offers": [
                            {
                                "__typename": "Offer",
                                "items": [
                                    {
                                        "__typename": "OfferItem",
                                        "id": "OIgp8x8LtoSZ"
                                    },
                                    {
                                        "__typename": "OfferItem",
                                        "id": "OIa9JX52Lohp"
                                    }
                                ]
                            },
                            {
                                "__typename": "Offer",
                                "items": [
                                    {
                                        "__typename": "OfferItem",
                                        "id": "OIYlfvZ2kjTn"
                                    },
                                    {
                                        "__typename": "OfferItem",
                                        "id": "OINiYOtvrh79"
                                    }
                                ]
                            }
                        ],
                        "supportedFeatures": {
                            "__typename": "AttractionsProductSupportedFeatures",
                            "nativeApp": true
                        },
                        "flags": [
                            {
                                "__typename": "AttractionsProductFlags",
                                "flag": "bestseller",
                                "value": true,
                                "rank": 5
                            }
                        ]
                    }
                ],
                "filterStats": {
                    "__typename": "FilterStats",
                    "unfilteredProductCount": 684,
                    "filteredProductCount": 684
                },
                "sorters": [
                    {
                        "__typename": "AttractionsSorterOption",
                        "name": "Our top picks",
                        "value": "trending"
                    },
                    {
                        "__typename": "AttractionsSorterOption",
                        "name": "Lowest price",
                        "value": "lowest_price"
                    }
                ],
                "defaultSorter": {
                    "__typename": "AttractionsSorterOption",
                    "name": "Our top picks",
                    "value": "trending"
                },
                "filterOptions": {
                    "__typename": "FilterOptions",
                    "typeFilters": [
                        {
                            "__typename": "FilterOption",
                            "name": "Tours ",
                            "tagname": "PTCMCuXtHgrC",
                            "productCount": 529
                        },
                        {
                            "__typename": "FilterOption",
                            "name": "Museums, arts & culture",
                            "tagname": "PTCMCcodv3rh",
                            "productCount": 419
                        }
                    ],
                    "labelFilters": [
                        {
                            "__typename": "FilterOption",
                            "name": "Free cancellation",
                            "tagname": "free_cancellation",
                            "productCount": 647
                        }
                    ],
                    "ufiFilters": [
                        {
                            "__typename": "FilterOption",
                            "name": "Mumbai",
                            "tagname": "-2092174",
                            "productCount": 683
                        },
                        {
                            "__typename": "FilterOption",
                            "name": "Andheri",
                            "tagname": "-2088871",
                            "productCount": 1
                        }
                    ],
                    "priceFilters": null
                }
            }
        }
    ],
    "response_summary": "The API response highlights three popular travel experiences in Mumbai, all of which offer free cancellation and can be booked through the native app. The first is the \"Dharavi, Dhobighat, and Mumbai Dabbawallas\" tour, a 3.5-hour exploration priced at $18 (originally $20). It has garnered 83 reviews with an impressive 4.8-star average and ranks as the top bestseller. Next is the \"Private Mumbai City Sightseeing Tour with Guide,\" which costs $66.48 and provides an authentic local experience. Despite having only three reviews, it boasts a perfect 5-star rating and is the fifth bestseller. Lastly, the \"All-Inclusive Elephanta Caves Guided Tour\" is priced at $40 (originally $50) and is ideal for history enthusiasts, with 37 reviews all rating it 5 stars, making it the second bestseller.  \n\nIn total, there are 684 activities available in Mumbai, with 647 offering free cancellation. The most popular categories include 529 tours, 419 museum and cultural experiences, and 50 food and drink options. Users can sort activities by \"Our Top Picks,\" \"Lowest Price,\" or \"Best Reviewed\" to find their preferred experience. The default sorting option is \"Our Top Picks,\" ensuring users see the most recommended activities first.",
    "enhance_func_desc": "This API is ideal for travelers planning activities in a specific location. It retrieves bookable attractions based on a location ID, with options to sort by popularity, rating, or price. Users can filter by date, price range, activity type, and more. The response includes detailed attraction information like pricing, ratings, reviews, and cancellation policies, helping users make informed booking decisions. The location ID must be obtained from the SearchLocation API.",
    "enhance_params_desc": {
        "enhanced_parameters": {
            "id": "Unique identifier for the location, obtained from the SearchLocation API.",
            "startDate": "Filters attractions available from this specific date.",
            "endDate": "Filters attractions available until this specific date.",
            "sortBy": "Sorts results by popularity (trending), booking score, or lowest price.",
            "page": "Specifies the page number for paginated results.",
            "currency_code": "Currency used to display attraction prices (e.g., INR, USD).",
            "languagecode": "Language preference for the API response (e.g., en-us).",
            "typeFilters": "Filters attractions by category (e.g., tours, museums, food).",
            "priceFilters": "Filters attractions by predefined price ranges.",
            "ufiFilters": "Filters attractions by unique feature identifiers (e.g., free cancellation).",
            "labelFilters": "Filters attractions by labels or tags (e.g., bestseller, top-rated)."
        }
    },
    "enhance_resfield_desc": {
        "response_fields": {
            "__typename": {
                "type": "String",
                "description": "The type name of the API response, indicating it's an attractions product search response."
            },
            "products": {
                "type": "Array",
                "description": "A list of attraction products available in the search results.",
                "ar_items": {
                    "type": "Object",
                    "description": "An object representing a single attraction product.",
                    "ob_properties": {
                        "__typename": {
                            "type": "String",
                            "description": "The type name of the product, indicating it's an attractions product."
                        },
                        "cancellationPolicy": {
                            "type": "Object",
                            "description": "Details about the cancellation policy for the product.",
                            "ob_properties": {
                                "__typename": {
                                    "type": "String",
                                    "description": "The type name of the cancellation policy."
                                },
                                "hasFreeCancellation": {
                                    "type": "Boolean",
                                    "description": "Indicates whether the product offers free cancellation."
                                }
                            }
                        },
                        "id": {
                            "type": "String",
                            "description": "A unique identifier for the product."
                        },
                        "name": {
                            "type": "String",
                            "description": "The display name of the attraction product."
                        },
                        "slug": {
                            "type": "String",
                            "description": "A URL-friendly version of the product name, used for routing."
                        },
                        "shortDescription": {
                            "type": "String",
                            "description": "A brief description of the attraction product."
                        },
                        "representativePrice": {
                            "type": "Object",
                            "description": "The pricing details for the product.",
                            "ob_properties": {
                                "__typename": {
                                    "type": "String",
                                    "description": "The type name of the price object."
                                },
                                "chargeAmount": {
                                    "type": "Number",
                                    "description": "The actual price charged for the product."
                                },
                                "currency": {
                                    "type": "String",
                                    "description": "The currency code for the price (e.g., 'USD')."
                                },
                                "publicAmount": {
                                    "type": "Number",
                                    "description": "The original or public price of the product before any discounts."
                                }
                            }
                        },
                        "primaryPhoto": {
                            "type": "Object",
                            "description": "The primary photo associated with the product.",
                            "ob_properties": {
                                "__typename": {
                                    "type": "String",
                                    "description": "The type name of the photo object."
                                },
                                "small": {
                                    "type": "String",
                                    "description": "A URL to a small-sized version of the photo."
                                }
                            }
                        },
                        "reviewsStats": {
                            "type": "Object",
                            "description": "Statistics about the reviews for the product.",
                            "ob_properties": {
                                "__typename": {
                                    "type": "String",
                                    "description": "The type name of the review stats object."
                                },
                                "allReviewsCount": {
                                    "type": "Number",
                                    "description": "The total number of reviews for the product."
                                },
                                "percentage": {
                                    "type": "String",
                                    "description": "The percentage of positive reviews, represented as a string."
                                },
                                "combinedNumericStats": {
                                    "type": "Object",
                                    "description": "Combined numeric statistics for the reviews.",
                                    "ob_properties": {
                                        "__typename": {
                                            "type": "String",
                                            "description": "The type name of the combined review stats object."
                                        },
                                        "average": {
                                            "type": "Number",
                                            "description": "The average rating of the product."
                                        },
                                        "total": {
                                            "type": "Number",
                                            "description": "The total number of ratings."
                                        }
                                    }
                                }
                            }
                        },
                        "ufiDetails": {
                            "type": "Object",
                            "description": "Details about the location of the attraction.",
                            "ob_properties": {
                                "__typename": {
                                    "type": "String",
                                    "description": "The type name of the location response object."
                                },
                                "bCityName": {
                                    "type": "String",
                                    "description": "The name of the city where the attraction is located."
                                },
                                "ufi": {
                                    "type": "Number",
                                    "description": "A unique identifier for the location."
                                },
                                "url": {
                                    "type": "Object",
                                    "description": "URL-related details for the location.",
                                    "ob_properties": {
                                        "__typename": {
                                            "type": "String",
                                            "description": "The type name of the URL object."
                                        },
                                        "country": {
                                            "type": "String",
                                            "description": "The country code for the location."
                                        }
                                    }
                                }
                            }
                        },
                        "offers": {
                            "type": "Array",
                            "description": "A list of offers available for the product.",
                            "ar_items": {
                                "type": "Object",
                                "description": "An object representing a single offer.",
                                "ob_properties": {
                                    "__typename": {
                                        "type": "String",
                                        "description": "The type name of the offer object."
                                    },
                                    "items": {
                                        "type": "Array",
                                        "description": "A list of items included in the offer.",
                                        "ar_items": {
                                            "type": "Object",
                                            "description": "An object representing a single offer item.",
                                            "ob_properties": {
                                                "__typename": {
                                                    "type": "String",
                                                    "description": "The type name of the offer item object."
                                                },
                                                "id": {
                                                    "type": "String",
                                                    "description": "A unique identifier for the offer item."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "supportedFeatures": {
                            "type": "Object",
                            "description": "Features supported by the product.",
                            "ob_properties": {
                                "__typename": {
                                    "type": "String",
                                    "description": "The type name of the supported features object."
                                },
                                "nativeApp": {
                                    "type": "Boolean",
                                    "description": "Indicates whether the product can be booked through the native app."
                                }
                            }
                        },
                        "flags": {
                            "type": "Array",
                            "description": "A list of flags associated with the product.",
                            "ar_items": {
                                "type": "Object",
                                "description": "An object representing a single flag.",
                                "ob_properties": {
                                    "__typename": {
                                        "type": "String",
                                        "description": "The type name of the flag object."
                                    },
                                    "flag": {
                                        "type": "String",
                                        "description": "The type of flag (e.g., 'bestseller')."
                                    },
                                    "value": {
                                        "type": "Boolean",
                                        "description": "Indicates whether the flag is active for the product."
                                    },
                                    "rank": {
                                        "type": "Number",
                                        "description": "The rank of the product in the category specified by the flag."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "filterStats": {
                "type": "Object",
                "description": "Statistics about the filtered and unfiltered product counts.",
                "ob_properties": {
                    "__typename": {
                        "type": "String",
                        "description": "The type name of the filter stats object."
                    },
                    "unfilteredProductCount": {
                        "type": "Number",
                        "description": "The total number of products available without any filters applied."
                    },
                    "filteredProductCount": {
                        "type": "Number",
                        "description": "The number of products available after applying the current filters."
                    }
                }
            },
            "sorters": {
                "type": "Array",
                "description": "A list of sorting options available for the search results.",
                "ar_items": {
                    "type": "Object",
                    "description": "An object representing a single sorting option.",
                    "ob_properties": {
                        "__typename": {
                            "type": "String",
                            "description": "The type name of the sorter option object."
                        },
                        "name": {
                            "type": "String",
                            "description": "The display name of the sorting option (e.g., 'Our top picks')."
                        },
                        "value": {
                            "type": "String",
                            "description": "The internal value used for sorting (e.g., 'trending')."
                        }
                    }
                }
            },
            "defaultSorter": {
                "type": "Object",
                "description": "The default sorting option for the search results.",
                "ob_properties": {
                    "__typename": {
                        "type": "String",
                        "description": "The type name of the sorter option object."
                    },
                    "name": {
                        "type": "String",
                        "description": "The display name of the default sorting option."
                    },
                    "value": {
                        "type": "String",
                        "description": "The internal value used for the default sorting."
                    }
                }
            },
            "filterOptions": {
                "type": "Object",
                "description": "A collection of filter options available for the search results.",
                "ob_properties": {
                    "__typename": {
                        "type": "String",
                        "description": "The type name of the filter options object."
                    },
                    "typeFilters": {
                        "type": "Array",
                        "description": "A list of filters based on product types.",
                        "ar_items": {
                            "type": "Object",
                            "description": "An object representing a single type filter.",
                            "ob_properties": {
                                "__typename": {
                                    "type": "String",
                                    "description": "The type name of the filter option object."
                                },
                                "name": {
                                    "type": "String",
                                    "description": "The display name of the filter (e.g., 'Tours')."
                                },
                                "tagname": {
                                    "type": "String",
                                    "description": "A unique identifier for the filter."
                                },
                                "productCount": {
                                    "type": "Number",
                                    "description": "The number of products available under this filter."
                                }
                            }
                        }
                    },
                    "labelFilters": {
                        "type": "Array",
                        "description": "A list of filters based on labels (e.g., 'Free cancellation').",
                        "ar_items": {
                            "type": "Object",
                            "description": "An object representing a single label filter.",
                            "ob_properties": {
                                "__typename": {
                                    "type": "String",
                                    "description": "The type name of the filter option object."
                                },
                                "name": {
                                    "type": "String",
                                    "description": "The display name of the label filter."
                                },
                                "tagname": {
                                    "type": "String",
                                    "description": "A unique identifier for the label filter."
                                },
                                "productCount": {
                                    "type": "Number",
                                    "description": "The number of products available under this label filter."
                                }
                            }
                        }
                    },
                    "ufiFilters": {
                        "type": "Array",
                        "description": "A list of filters based on location (UFI).",
                        "ar_items": {
                            "type": "Object",
                            "description": "An object representing a single location filter.",
                            "ob_properties": {
                                "__typename": {
                                    "type": "String",
                                    "description": "The type name of the filter option object."
                                },
                                "name": {
                                    "type": "String",
                                    "description": "The display name of the location filter (e.g., 'Mumbai')."
                                },
                                "tagname": {
                                    "type": "String",
                                    "description": "A unique identifier for the location filter."
                                },
                                "productCount": {
                                    "type": "Number",
                                    "description": "The number of products available under this location filter."
                                }
                            }
                        }
                    },
                    "priceFilters": {
                        "type": "null",
                        "description": "Indicates that no price filters are currently available."
                    }
                }
            }
        }
    },
    "params_desc_list": null,
    "response_desc_list": [
        {
            "path_name": "$.__typename",
            "name": "__typename",
            "description": "The type name of the API response, indicating it's an attractions product search response."
        },
        {
            "path_name": "$.products",
            "name": "products",
            "description": "A list of attraction products available in the search results."
        },
        {
            "path_name": "$.products[]",
            "name": "products[]",
            "description": "An object representing a single attraction product."
        },
        {
            "path_name": "$.products[].__typename",
            "name": "__typename",
            "description": "The type name of the product, indicating it's an attractions product."
        },
        {
            "path_name": "$.products[].cancellationPolicy",
            "name": "cancellationPolicy",
            "description": "Details about the cancellation policy for the product."
        },
        {
            "path_name": "$.products[].cancellationPolicy.__typename",
            "name": "__typename",
            "description": "The type name of the cancellation policy."
        },
        {
            "path_name": "$.products[].cancellationPolicy.hasFreeCancellation",
            "name": "hasFreeCancellation",
            "description": "Indicates whether the product offers free cancellation."
        },
        {
            "path_name": "$.products[].id",
            "name": "id",
            "description": "A unique identifier for the product."
        },
        {
            "path_name": "$.products[].name",
            "name": "name",
            "description": "The display name of the attraction product."
        },
        {
            "path_name": "$.products[].slug",
            "name": "slug",
            "description": "A URL-friendly version of the product name, used for routing."
        },
        {
            "path_name": "$.products[].shortDescription",
            "name": "shortDescription",
            "description": "A brief description of the attraction product."
        },
        {
            "path_name": "$.products[].representativePrice",
            "name": "representativePrice",
            "description": "The pricing details for the product."
        },
        {
            "path_name": "$.products[].representativePrice.__typename",
            "name": "__typename",
            "description": "The type name of the price object."
        },
        {
            "path_name": "$.products[].representativePrice.chargeAmount",
            "name": "chargeAmount",
            "description": "The actual price charged for the product."
        },
        {
            "path_name": "$.products[].representativePrice.currency",
            "name": "currency",
            "description": "The currency code for the price (e.g., 'USD')."
        },
        {
            "path_name": "$.products[].representativePrice.publicAmount",
            "name": "publicAmount",
            "description": "The original or public price of the product before any discounts."
        },
        {
            "path_name": "$.products[].primaryPhoto",
            "name": "primaryPhoto",
            "description": "The primary photo associated with the product."
        },
        {
            "path_name": "$.products[].primaryPhoto.__typename",
            "name": "__typename",
            "description": "The type name of the photo object."
        },
        {
            "path_name": "$.products[].primaryPhoto.small",
            "name": "small",
            "description": "A URL to a small-sized version of the photo."
        },
        {
            "path_name": "$.products[].reviewsStats",
            "name": "reviewsStats",
            "description": "Statistics about the reviews for the product."
        },
        {
            "path_name": "$.products[].reviewsStats.__typename",
            "name": "__typename",
            "description": "The type name of the review stats object."
        },
        {
            "path_name": "$.products[].reviewsStats.allReviewsCount",
            "name": "allReviewsCount",
            "description": "The total number of reviews for the product."
        },
        {
            "path_name": "$.products[].reviewsStats.percentage",
            "name": "percentage",
            "description": "The percentage of positive reviews, represented as a string."
        },
        {
            "path_name": "$.products[].reviewsStats.combinedNumericStats",
            "name": "combinedNumericStats",
            "description": "Combined numeric statistics for the reviews."
        },
        {
            "path_name": "$.products[].reviewsStats.combinedNumericStats.__typename",
            "name": "__typename",
            "description": "The type name of the combined review stats object."
        },
        {
            "path_name": "$.products[].reviewsStats.combinedNumericStats.average",
            "name": "average",
            "description": "The average rating of the product."
        },
        {
            "path_name": "$.products[].reviewsStats.combinedNumericStats.total",
            "name": "total",
            "description": "The total number of ratings."
        },
        {
            "path_name": "$.products[].ufiDetails",
            "name": "ufiDetails",
            "description": "Details about the location of the attraction."
        },
        {
            "path_name": "$.products[].ufiDetails.__typename",
            "name": "__typename",
            "description": "The type name of the location response object."
        },
        {
            "path_name": "$.products[].ufiDetails.bCityName",
            "name": "bCityName",
            "description": "The name of the city where the attraction is located."
        },
        {
            "path_name": "$.products[].ufiDetails.ufi",
            "name": "ufi",
            "description": "A unique identifier for the location."
        },
        {
            "path_name": "$.products[].ufiDetails.url",
            "name": "url",
            "description": "URL-related details for the location."
        },
        {
            "path_name": "$.products[].ufiDetails.url.__typename",
            "name": "__typename",
            "description": "The type name of the URL object."
        },
        {
            "path_name": "$.products[].ufiDetails.url.country",
            "name": "country",
            "description": "The country code for the location."
        },
        {
            "path_name": "$.products[].offers",
            "name": "offers",
            "description": "A list of offers available for the product."
        },
        {
            "path_name": "$.products[].offers[]",
            "name": "offers[]",
            "description": "An object representing a single offer."
        },
        {
            "path_name": "$.products[].offers[].__typename",
            "name": "__typename",
            "description": "The type name of the offer object."
        },
        {
            "path_name": "$.products[].offers[].items",
            "name": "items",
            "description": "A list of items included in the offer."
        },
        {
            "path_name": "$.products[].offers[].items[]",
            "name": "items[]",
            "description": "An object representing a single offer item."
        },
        {
            "path_name": "$.products[].offers[].items[].__typename",
            "name": "__typename",
            "description": "The type name of the offer item object."
        },
        {
            "path_name": "$.products[].offers[].items[].id",
            "name": "id",
            "description": "A unique identifier for the offer item."
        },
        {
            "path_name": "$.products[].supportedFeatures",
            "name": "supportedFeatures",
            "description": "Features supported by the product."
        },
        {
            "path_name": "$.products[].supportedFeatures.__typename",
            "name": "__typename",
            "description": "The type name of the supported features object."
        },
        {
            "path_name": "$.products[].supportedFeatures.nativeApp",
            "name": "nativeApp",
            "description": "Indicates whether the product can be booked through the native app."
        },
        {
            "path_name": "$.products[].flags",
            "name": "flags",
            "description": "A list of flags associated with the product."
        },
        {
            "path_name": "$.products[].flags[]",
            "name": "flags[]",
            "description": "An object representing a single flag."
        },
        {
            "path_name": "$.products[].flags[].__typename",
            "name": "__typename",
            "description": "The type name of the flag object."
        },
        {
            "path_name": "$.products[].flags[].flag",
            "name": "flag",
            "description": "The type of flag (e.g., 'bestseller')."
        },
        {
            "path_name": "$.products[].flags[].value",
            "name": "value",
            "description": "Indicates whether the flag is active for the product."
        },
        {
            "path_name": "$.products[].flags[].rank",
            "name": "rank",
            "description": "The rank of the product in the category specified by the flag."
        },
        {
            "path_name": "$.filterStats",
            "name": "filterStats",
            "description": "Statistics about the filtered and unfiltered product counts."
        },
        {
            "path_name": "$.filterStats.__typename",
            "name": "__typename",
            "description": "The type name of the filter stats object."
        },
        {
            "path_name": "$.filterStats.unfilteredProductCount",
            "name": "unfilteredProductCount",
            "description": "The total number of products available without any filters applied."
        },
        {
            "path_name": "$.filterStats.filteredProductCount",
            "name": "filteredProductCount",
            "description": "The number of products available after applying the current filters."
        },
        {
            "path_name": "$.sorters",
            "name": "sorters",
            "description": "A list of sorting options available for the search results."
        },
        {
            "path_name": "$.sorters[]",
            "name": "sorters[]",
            "description": "An object representing a single sorting option."
        },
        {
            "path_name": "$.sorters[].__typename",
            "name": "__typename",
            "description": "The type name of the sorter option object."
        },
        {
            "path_name": "$.sorters[].name",
            "name": "name",
            "description": "The display name of the sorting option (e.g., 'Our top picks')."
        },
        {
            "path_name": "$.sorters[].value",
            "name": "value",
            "description": "The internal value used for sorting (e.g., 'trending')."
        },
        {
            "path_name": "$.defaultSorter",
            "name": "defaultSorter",
            "description": "The default sorting option for the search results."
        },
        {
            "path_name": "$.defaultSorter.__typename",
            "name": "__typename",
            "description": "The type name of the sorter option object."
        },
        {
            "path_name": "$.defaultSorter.name",
            "name": "name",
            "description": "The display name of the default sorting option."
        },
        {
            "path_name": "$.defaultSorter.value",
            "name": "value",
            "description": "The internal value used for the default sorting."
        },
        {
            "path_name": "$.filterOptions",
            "name": "filterOptions",
            "description": "A collection of filter options available for the search results."
        },
        {
            "path_name": "$.filterOptions.__typename",
            "name": "__typename",
            "description": "The type name of the filter options object."
        },
        {
            "path_name": "$.filterOptions.typeFilters",
            "name": "typeFilters",
            "description": "A list of filters based on product types."
        },
        {
            "path_name": "$.filterOptions.typeFilters[]",
            "name": "typeFilters[]",
            "description": "An object representing a single type filter."
        },
        {
            "path_name": "$.filterOptions.typeFilters[].__typename",
            "name": "__typename",
            "description": "The type name of the filter option object."
        },
        {
            "path_name": "$.filterOptions.typeFilters[].name",
            "name": "name",
            "description": "The display name of the filter (e.g., 'Tours')."
        },
        {
            "path_name": "$.filterOptions.typeFilters[].tagname",
            "name": "tagname",
            "description": "A unique identifier for the filter."
        },
        {
            "path_name": "$.filterOptions.typeFilters[].productCount",
            "name": "productCount",
            "description": "The number of products available under this filter."
        },
        {
            "path_name": "$.filterOptions.labelFilters",
            "name": "labelFilters",
            "description": "A list of filters based on labels (e.g., 'Free cancellation')."
        },
        {
            "path_name": "$.filterOptions.labelFilters[]",
            "name": "labelFilters[]",
            "description": "An object representing a single label filter."
        },
        {
            "path_name": "$.filterOptions.labelFilters[].__typename",
            "name": "__typename",
            "description": "The type name of the filter option object."
        },
        {
            "path_name": "$.filterOptions.labelFilters[].name",
            "name": "name",
            "description": "The display name of the label filter."
        },
        {
            "path_name": "$.filterOptions.labelFilters[].tagname",
            "name": "tagname",
            "description": "A unique identifier for the label filter."
        },
        {
            "path_name": "$.filterOptions.labelFilters[].productCount",
            "name": "productCount",
            "description": "The number of products available under this label filter."
        },
        {
            "path_name": "$.filterOptions.ufiFilters",
            "name": "ufiFilters",
            "description": "A list of filters based on location (UFI)."
        },
        {
            "path_name": "$.filterOptions.ufiFilters[]",
            "name": "ufiFilters[]",
            "description": "An object representing a single location filter."
        },
        {
            "path_name": "$.filterOptions.ufiFilters[].__typename",
            "name": "__typename",
            "description": "The type name of the filter option object."
        },
        {
            "path_name": "$.filterOptions.ufiFilters[].name",
            "name": "name",
            "description": "The display name of the location filter (e.g., 'Mumbai')."
        },
        {
            "path_name": "$.filterOptions.ufiFilters[].tagname",
            "name": "tagname",
            "description": "A unique identifier for the location filter."
        },
        {
            "path_name": "$.filterOptions.ufiFilters[].productCount",
            "name": "productCount",
            "description": "The number of products available under this location filter."
        },
        {
            "path_name": "$.filterOptions.priceFilters",
            "name": "priceFilters",
            "description": "Indicates that no price filters are currently available."
        }
    ],
    "depends_on": [
        {
            "target_api_params": "id",
            "reason": "The 'id' parameter in the target API requires a unique identifier for the location, which can be obtained from the SearchLocation API. The source API's response includes an 'id' field that matches the format and type required by the target API. This creates a potential business association where a traveler might want to search for attractions in the same location where they are searching for car rentals.",
            "source_jsonpath": "$[*].id",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Car_Auto-Complete"
        },
        {
            "target_api_params": "id",
            "reason": "The 'id' parameter in the target API requires a unique identifier for the location, which can be obtained from the SearchLocation API. The source API's response fields include 'id' for both cities and airports (e.g., 'NYC.CITY' and 'JFK.AIRPORT'). These IDs match the format expected by the target API and can be used directly as input parameters.",
            "source_jsonpath": "$[*].id",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Flight_Location"
        },
        {
            "target_api_params": "id",
            "reason": "The 'id' parameter in the target API requires a unique identifier for the location, which is obtained from the SearchLocation API. The source API's 'location_hash' field in the route_info.pickup or route_info.dropoff provides a unique identifier for the location (e.g., 'Sm9obiBGIEtlbm5lZHkgSW50ZXJuYXRpb25hbCBBaXJwb3J0'). This creates a potential business association where a traveler might want to search for attractions near their car rental pickup or dropoff location.",
            "source_jsonpath": "$.search_results[*].route_info.pickup.location_hash or $.search_results[*].route_info.dropoff.location_hash",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Car_Search"
        },
        {
            "target_api_params": "id",
            "reason": "The 'metaData.locationHash' field in the supplierLocations also provides a unique identifier for the location (e.g., 'Sm9obiBGIEtlbm5lZHkgSW50ZXJuYXRpb25hbCBBaXJwb3J0'). This could be used as an input for the 'id' parameter in the target API, creating a potential business association where attractions are searched near car rental locations.",
            "source_jsonpath": "$.content.map.supplierLocations[*].metaData.locationHash",
            "confidence": 80,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Car_Search"
        },
        {
            "target_api_params": "id",
            "reason": "The 'id' parameter in the target API requires a unique identifier for the location, which is explicitly stated to be obtained from the SearchLocation API. The source API's response fields include 'id' within both 'destinations' and 'products' arrays, which matches the requirement. This is a clear case where the source API provides the necessary prerequisite data for the target API.",
            "source_jsonpath": "$.destinations[*].id",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Attraction_Location"
        },
        {
            "target_api_params": "id",
            "reason": "The 'id' field within the 'products' array of the source API also provides a unique identifier for locations, which can be used as input for the target API's 'id' parameter. This is another valid source for the required data, though it is more specific to products rather than general destinations.",
            "source_jsonpath": "$.products[*].id",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Attraction_Location"
        },
        {
            "target_api_params": "id",
            "reason": "The 'id' parameter in the target API requires a unique identifier for the location, which is obtained from the SearchLocation API. The source API 'Location_to_Lat_Long' provides detailed geographic data including a 'place_id' field, which is a unique identifier for the location. This 'place_id' could potentially be used as the 'id' parameter in the target API if the systems are integrated to recognize this identifier.",
            "source_jsonpath": "$[*].place_id",
            "confidence": 85,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Location_to_Lat_Long"
        },
        {
            "target_api_params": "id",
            "reason": "The 'id' parameter in the target API requires a unique identifier for the location, which is obtained from the SearchLocation API. The source API's 'ufi' field in the hotel properties represents a unique location identifier (e.g., '-2092174'). This matches the requirement for the target API's 'id' parameter, as both are used to identify specific locations for travel-related services.",
            "source_jsonpath": "$.hotels[*].property.ufi",
            "confidence": 95,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Hotels"
        }
    ],
    "verified": true
}