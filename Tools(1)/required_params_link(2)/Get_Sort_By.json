{
    "name": "Get_Sort_By",
    "docs_row": {
        "name": "Get_Sort_By",
        "endpoint": "/api/v1/hotels/getSortBy",
        "func_description": "Get sorted hotel listings based on filters and destination. ",
        "parameters": {
            "type": "object",
            "properties": {
                "dest_id": {
                    "type": "String",
                    "description": "dest_id can be retrieved from api/v1/hotels/searchDestination(Search Hotel Destination) endpoint in Hotels collection.",
                    "example_value": "-2092174",
                    "required": true
                },
                "search_type": {
                    "type": "String",
                    "description": "search_type can be retrieved from api/v1/hotels/searchDestination(Search Hotel Destination) endpoint in Hotels collection.",
                    "example_value": "CITY",
                    "required": true
                },
                "arrival_date": {
                    "type": "Date (yyyy-mm-dd)",
                    "description": "The date on which you will arrive or check-in",
                    "example_value": "",
                    "required": true
                },
                "departure_date": {
                    "type": "Date (yyyy-mm-dd)",
                    "description": "The date of departure or check-out.",
                    "example_value": "",
                    "required": true
                },
                "adults": {
                    "type": "Number",
                    "description": "The number of guests who are 18 years of age or older. The default value is set to 1.",
                    "example_value": "1",
                    "required": false
                },
                "children_age": {
                    "type": "String",
                    "description": "The number of children, including infants, who are under 18.\nExample:\nChild 1 Age = 8 months\nChild 2 Age = 1 year\nChild 3 Age = 17 years\nHere is what the request parameter would look like:\nchildren_age: 0,1,17",
                    "example_value": "1,17",
                    "required": false
                },
                "room_qty": {
                    "type": "Number",
                    "description": "The number of rooms that are required. The default value is set to 1.",
                    "example_value": "1",
                    "required": false
                },
                "categories_filter": {
                    "type": "String",
                    "description": "categories_filter can be retrieved from api/v1/hotels/getFilter(Get Filter) endpoint in Hotels collection.",
                    "example_value": "",
                    "required": false
                },
                "languagecode": {
                    "type": "String",
                    "description": "To obtain the response data in a specific language, enter the languagecode. languagecode can be retrieved from api/v1/meta/getLanguages(Get Languages\n) endpoint in Meta collection.",
                    "example_value": "",
                    "required": false
                }
            },
            "required": [
                "dest_id",
                "search_type",
                "arrival_date",
                "departure_date"
            ]
        }
    },
    "instance": [],
    "category": null,
    "tool": null,
    "api_idx": 31,
    "params": {
        "type": "object",
        "properties": {
            "dest_id": {
                "type": "String",
                "description": "dest_id can be retrieved from api/v1/hotels/searchDestination(Search Hotel Destination) endpoint in Hotels collection.",
                "example_value": "-2092174",
                "required": true
            },
            "search_type": {
                "type": "String",
                "description": "search_type can be retrieved from api/v1/hotels/searchDestination(Search Hotel Destination) endpoint in Hotels collection.",
                "example_value": "CITY",
                "required": true
            },
            "arrival_date": {
                "type": "Date (yyyy-mm-dd)",
                "description": "The date on which you will arrive or check-in",
                "example_value": "",
                "required": true
            },
            "departure_date": {
                "type": "Date (yyyy-mm-dd)",
                "description": "The date of departure or check-out.",
                "example_value": "",
                "required": true
            },
            "adults": {
                "type": "Number",
                "description": "The number of guests who are 18 years of age or older. The default value is set to 1.",
                "example_value": "1",
                "required": false
            },
            "children_age": {
                "type": "String",
                "description": "The number of children, including infants, who are under 18.\nExample:\nChild 1 Age = 8 months\nChild 2 Age = 1 year\nChild 3 Age = 17 years\nHere is what the request parameter would look like:\nchildren_age: 0,1,17",
                "example_value": "1,17",
                "required": false
            },
            "room_qty": {
                "type": "Number",
                "description": "The number of rooms that are required. The default value is set to 1.",
                "example_value": "1",
                "required": false
            },
            "categories_filter": {
                "type": "String",
                "description": "categories_filter can be retrieved from api/v1/hotels/getFilter(Get Filter) endpoint in Hotels collection.",
                "example_value": "",
                "required": false
            },
            "languagecode": {
                "type": "String",
                "description": "To obtain the response data in a specific language, enter the languagecode. languagecode can be retrieved from api/v1/meta/getLanguages(Get Languages\n) endpoint in Meta collection.",
                "example_value": "",
                "required": false
            }
        },
        "required": [
            "dest_id",
            "search_type",
            "arrival_date",
            "departure_date"
        ]
    },
    "responses": [
        {
            "function_name": "Get_Sort_By",
            "arguments": {
                "dest_id": "-2092174",
                "search_type": "CITY",
                "arrival_date": "2025-06-10",
                "departure_date": "2025-06-15"
            },
            "observation": [
                {
                    "id": "upsort_bh",
                    "title": "Entire homes & apartments first"
                },
                {
                    "id": "popularity",
                    "title": "Top picks for solo travellers"
                },
                {
                    "id": "distance",
                    "title": "Distance from city centre"
                }
            ]
        },
        {
            "function_name": "Get_Sort_By",
            "arguments": {
                "dest_id": "-2092174",
                "search_type": "CITY",
                "arrival_date": "2025-06-10",
                "departure_date": "2025-06-15",
                "adults": 2,
                "children_age": "5",
                "room_qty": 1
            },
            "observation": [
                {
                    "id": "upsort_bh",
                    "title": "Entire homes & apartments first"
                },
                {
                    "id": "popularity",
                    "title": "Our top picks"
                },
                {
                    "id": "distance",
                    "title": "Distance from city centre"
                }
            ]
        }
    ],
    "response_summary": "The API response provides three sorting options for accommodations. The first option prioritizes entire homes and apartments, ensuring they appear at the top of search results. The second option highlights top recommendations specifically tailored for solo travelers, helping them find the most suitable stays. The third option sorts listings based on their proximity to the city center, allowing users to easily find accommodations closest to key locations. These sorting choices help users refine their search based on their preferences, whether they prioritize space, solo-friendly options, or convenience of location.",
    "enhance_func_desc": "This API is ideal for travelers seeking personalized accommodation options. It provides sorting choices for hotel searches, prioritizing entire homes/apartments, solo traveler recommendations, or proximity to city center. Users input destination, dates, and guest details to receive tailored results. The response helps refine searches based on space, traveler type, or location convenience, enhancing the booking experience. Required parameters include destination ID, search type, and stay dates.",
    "enhance_params_desc": {
        "enhanced_parameters": {
            "dest_id": "Unique destination identifier from searchDestination endpoint.",
            "search_type": "Type of search (e.g., CITY, REGION).",
            "arrival_date": "Check-in date for accommodation search.",
            "departure_date": "Check-out date for accommodation search.",
            "adults": "Number of adult guests (18+ years).",
            "children_age": "Ages of children (comma-separated, under 18).",
            "room_qty": "Number of rooms needed for booking.",
            "categories_filter": "Filters accommodations by category (e.g., entire homes).",
            "languagecode": "Language preference for response data."
        }
    },
    "enhance_resfield_desc": {
        "response_fields": [
            {
                "id": {
                    "type": "String",
                    "description": "The unique identifier for the sorting option (e.g., 'upsort_bh', 'popularity', 'distance')."
                },
                "title": {
                    "type": "String",
                    "description": "The display name of the sorting option (e.g., 'Entire homes & apartments first', 'Top picks for solo travellers', 'Distance from city centre')."
                }
            }
        ]
    },
    "params_desc_list": null,
    "response_desc_list": [
        {
            "path_name": "$[].id",
            "name": "id",
            "description": "The unique identifier for the sorting option (e.g., 'upsort_bh', 'popularity', 'distance')."
        },
        {
            "path_name": "$[].title",
            "name": "title",
            "description": "The display name of the sorting option (e.g., 'Entire homes & apartments first', 'Top picks for solo travellers', 'Distance from city centre')."
        }
    ],
    "depends_on": [
        {
            "target_api_params": "dest_id",
            "reason": "The 'dest_id' parameter in the target API requires a destination ID for hotel searches. The source API's response includes 'dest_id' fields for nearby cities (e.g., 20085521, 20085207), which exactly match the required parameter type and purpose. This creates a hard dependency as the source API directly provides the necessary destination IDs for hotel searches.",
            "source_jsonpath": "$[*].dest_id",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Get_Nearby_Cities"
        },
        {
            "target_api_params": "dest_id",
            "reason": "The 'dest_id' parameter in the target API is explicitly stated to be retrievable from the 'api/v1/hotels/searchDestination' endpoint, which is the source API in this case. The source API's response includes a 'dest_id' field that matches exactly what the target API requires. This is a clear case where the source API provides a necessary prerequisite for calling the target API.",
            "source_jsonpath": "$[*].dest_id",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Hotel_Destination"
        },
        {
            "target_api_params": "dest_id",
            "reason": "The 'dest_id' parameter in the target API requires a destination ID for hotel searches, which can be retrieved from the 'api/v1/hotels/searchDestination' endpoint. The source API's 'ufiFilters[*].tagname' field provides location IDs (e.g., '-2092174') that match the format and type required by the target API. This indicates a potential hard dependency where the source API's response can directly provide the necessary input for the target API.",
            "source_jsonpath": "$.filterOptions.ufiFilters[*].tagname",
            "confidence": 95,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Attractions"
        },
        {
            "target_api_params": "dest_id",
            "reason": "The 'products[*].ufiDetails.ufi' field in the source API also provides location IDs (e.g., '-2092174') that match the format and type required by the target API. However, this field is nested within product details and may not always be directly accessible or consistently available across all responses.",
            "source_jsonpath": "$.products[*].ufiDetails.ufi",
            "confidence": 85,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Attractions"
        },
        {
            "target_api_params": "dest_id",
            "reason": "The 'dest_id' parameter in the target API is used to identify the destination for hotel searches. The source API's response includes 'ufi' (Universal Feature Identifier) which serves a similar purpose as a unique identifier for locations. This creates a potential business association where the same destination identifier can be used across different hotel-related APIs.",
            "source_jsonpath": "$.result[*].ufi",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Hotels_By_Coordinates"
        },
        {
            "target_api_params": "dest_id",
            "reason": "The 'dest_id' parameter in the target API is explicitly stated to be retrievable from the 'api/v1/hotels/searchDestination' endpoint, which is the same source as mentioned in the source API documentation. The source API response includes a 'ufi' field (e.g., -2092174) which matches the example value provided in the target API documentation. This indicates a direct prerequisite relationship where the source API must be called first to obtain the 'dest_id' for the target API.",
            "source_jsonpath": "$.hotels[*].property.ufi",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Hotels"
        },
        {
            "target_api_params": "search_type",
            "reason": "The 'search_type' parameter in the target API requires a string value that indicates the type of destination being searched (e.g., 'CITY', 'DISTRICT'). The source API's response includes a 'search_type' field (e.g., 'city', 'district') which exactly matches the required parameter. This is a direct match in both data type and semantic meaning, making it a clear prerequisite for the target API.",
            "source_jsonpath": "$[*].search_type",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Hotel_Destination"
        },
        {
            "target_api_params": "search_type",
            "reason": "The 'search_type' parameter in the target API requires a value that indicates the type of destination being searched (e.g., 'CITY' or 'AIRPORT'). The source API's response includes a 'type' field that specifies whether the location is a city or an airport (e.g., 'CITY' or 'AIRPORT'). This matches the requirement of the target API parameter, making it a valid input. The data types also match (both are strings).",
            "source_jsonpath": "$[*].type",
            "confidence": 95,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Flight_Location"
        },
        {
            "target_api_params": "search_type",
            "reason": "The 'search_type' parameter in the target API is described as being retrievable from the 'api/v1/hotels/searchDestination' endpoint, which is the same source as mentioned in the source API documentation. This indicates a direct prerequisite relationship where the source API must be called first to obtain the 'search_type' value needed for the target API.",
            "source_jsonpath": "$.search_type",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Hotels"
        },
        {
            "target_api_params": "arrival_date",
            "reason": "The 'arrival_date' parameter in the target API requires a specific check-in date (yyyy-mm-dd format). The source API's 'arrival_date' field provides the exact check-in date (e.g., '2025-06-10'). The data types match perfectly, and the context is directly related as both APIs deal with hotel bookings and check-in dates.",
            "source_jsonpath": "$.arrival_date",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Get_Room_List"
        },
        {
            "target_api_params": "arrival_date",
            "reason": "The 'arrival_date' parameter in the target API requires the check-in date for hotel sorting. The source API's 'checkinDate' field in hotel properties provides the exact check-in date (e.g., '2025-06-10'). The data types match perfectly (both are 'yyyy-mm-dd'), and this is a direct prerequisite for calling the target API since you need to know the check-in date before sorting hotel options.",
            "source_jsonpath": "$.hotels[*].property.checkinDate",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Hotels"
        },
        {
            "target_api_params": "arrival_date",
            "reason": "The 'arrival_date' parameter in the target API requires a check-in date in 'yyyy-mm-dd' format. The source API's 'departureDate' field provides flight departure dates in the same format (e.g., '2025-05-20'). There is a potential business association where a traveler might book a hotel starting from the day they arrive at their destination by flight. The data types match perfectly, and the context supports this relationship.",
            "source_jsonpath": "$[*].departureDate",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Get_Min_Price_Multi_Stops"
        },
        {
            "target_api_params": "arrival_date",
            "reason": "The 'arrival_date' parameter in the target API requires the check-in date for a hotel stay. The source API's 'checkin' field in the 'stayed_room_info' object provides the exact check-in date (e.g., '2025-05-08'). The data types match (both are in 'yyyy-mm-dd' format), and this creates a potential business association where a traveler might want to sort hotel options based on previous stay dates.",
            "source_jsonpath": "$.result[*].stayed_room_info.checkin",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Get_Hotel_Reviews(Tips)"
        },
        {
            "target_api_params": "arrival_date",
            "reason": "The 'arrival_date' parameter in the target API requires the check-in date for hotel sorting. The source API's 'arrival_date' parameter serves the same purpose, providing the exact date a traveler plans to check in. The data types match perfectly (both are 'Date (yyyy-mm-dd)'), and the context is identical (hotel stay planning).",
            "source_jsonpath": "$.arrival_date",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Get_Hotel_Facilities"
        },
        {
            "target_api_params": "arrival_date",
            "reason": "The 'arrival_date' parameter in the target API requires the check-in date for hotel stays. The source API's 'arrival_date' parameter is identical in purpose and format, serving as a direct prerequisite for calling the target API. This is a hard dependency as the target API cannot function without this parameter.",
            "source_jsonpath": "$.parameters.properties.arrival_date",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Get_Filter"
        },
        {
            "target_api_params": "departure_date",
            "reason": "The 'departure_date' parameter in the target API requires a specific check-out date (yyyy-mm-dd format). The source API's 'departure_date' field provides the exact date in the required format (e.g., '2025-06-15'). This creates a direct match where the departure date from the room list can be used as the departure date for sorting hotel options.",
            "source_jsonpath": "$.departure_date",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Get_Room_List"
        },
        {
            "target_api_params": "departure_date",
            "reason": "The 'departure_date' parameter in the target API requires the date of departure or check-out from a hotel. The source API's 'departDate' field provides the departure date for flights, which could be used to infer the hotel check-out date if the traveler plans to leave the destination on the same day as their flight departure. The data types match (both are in 'yyyy-mm-dd' format).",
            "source_jsonpath": "$.departDate",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Flights"
        },
        {
            "target_api_params": "departure_date",
            "reason": "The 'departure_date' parameter in the target API requires a specific check-out date (yyyy-mm-dd format). The source API's 'date' field in the availability calendar provides exact dates (e.g., '2025-05-19'). The data types match perfectly (both are yyyy-mm-dd dates). This creates a potential business association where a traveler might want to check out from their hotel on the same day they visit an attraction.",
            "source_jsonpath": "$[*].date",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Get_Availability_Calendar"
        },
        {
            "target_api_params": "departure_date",
            "reason": "The 'departure_date' parameter in the target API requires the check-out date in 'yyyy-mm-dd' format. The source API's response includes 'checkoutDate' fields (e.g., '2025-06-15') which exactly match the required format and semantic meaning. This creates a hard dependency as the target API's sorting functionality logically depends on the stay dates provided during hotel search.",
            "source_jsonpath": "$.hotels[].property.checkoutDate",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Hotels"
        },
        {
            "target_api_params": "departure_date",
            "reason": "The 'departure_date' parameter in the target API requires the date of departure or check-out in 'yyyy-mm-dd' format. The source API's 'departureTime' field in flight segments provides exact departure timestamps (e.g., '2025-05-28T23:45:00'). The date portion can be extracted to match the required format. This creates a potential business association where a traveler's hotel check-out date aligns with their flight departure date.",
            "source_jsonpath": "$.flightOffers[*].segments[*].departureTime",
            "confidence": 90,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Flights_Multi_Stops"
        },
        {
            "target_api_params": "departure_date",
            "reason": "The 'departure_date' parameter in the target API requires the date of departure or check-out from a hotel. The source API's 'departure_date' field in the parameters section provides the same information. The data types match exactly (both are 'Date (yyyy-mm-dd)'), and the context is directly relevant as both APIs deal with hotel stays. This creates a potential business association where the departure date from one hotel query could be used to sort hotel options.",
            "source_jsonpath": "$.parameters.departure_date",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Get_Hotel_Facilities"
        },
        {
            "target_api_params": "departure_date",
            "reason": "The 'departure_date' parameter in the target API requires the check-out date for a hotel stay. The source API's 'returnDate' field provides the return date for flights, which could logically correspond to the hotel check-out date if the traveler is booking a hotel stay that ends when they return from their trip. The data types match (both are in 'yyyy-mm-dd' format), and there is a reasonable business association where a traveler's hotel stay would end on their return flight date.",
            "source_jsonpath": "$[*].returnDate",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Get_Min_Price_Multi_Stops"
        },
        {
            "target_api_params": "departure_date",
            "reason": "The 'departure_date' parameter in the target API requires the check-out date of a hotel stay. The source API's 'stayed_room_info.checkout' field provides the exact check-out date (e.g., '2025-05-09') from hotel reviews. The data types match (both are in 'yyyy-mm-dd' format), and the field directly represents the check-out date of a previous stay, which could be used to infer a future departure date.",
            "source_jsonpath": "$.result[].stayed_room_info.checkout",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Get_Hotel_Reviews(Tips)"
        },
        {
            "target_api_params": "departure_date",
            "reason": "The 'departure_date' parameter in the target API requires the date of departure or check-out in 'yyyy-mm-dd' format. The source API's 'departure_date' parameter is identical in description, format, and requirement, making it a perfect match for the target parameter. This is a clear case where the source API's parameter can directly serve as input for the target API.",
            "source_jsonpath": "$.departure_date",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Get_Filter"
        },
        {
            "target_api_params": "departure_date",
            "reason": "The 'departure_date' parameter in the target API requires the check-out date for a hotel stay. The source API's 'requestedPickupDateTime' field provides the exact date and time of a taxi pickup (e.g., '2025-06-15T14:30:00'). While the data types differ (timestamp vs date), the date portion can be extracted. This creates a potential business association where a traveler might need a taxi for departure from the hotel on the check-out date.",
            "source_jsonpath": "$.journeys[].requestedPickupDateTime",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Taxi"
        }
    ],
    "verified": true
}