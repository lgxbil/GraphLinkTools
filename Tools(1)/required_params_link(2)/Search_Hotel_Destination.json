{
    "name": "Search_Hotel_Destination",
    "docs_row": {
        "name": "Search_Hotel_Destination",
        "endpoint": "/api/v1/hotels/searchDestination",
        "func_description": "Find Hotels by their location, address, state, country, etc. This api's response contains the latitude and longitude for the search query. ",
        "parameters": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "String",
                    "description": "Names of locations, cities, districts, places, countries, counties etc.",
                    "example_value": "man",
                    "required": true
                }
            },
            "required": [
                "query"
            ]
        }
    },
    "instance": [],
    "category": null,
    "tool": null,
    "api_idx": 51,
    "params": {
        "type": "object",
        "properties": {
            "query": {
                "type": "String",
                "description": "Names of locations, cities, districts, places, countries, counties etc.",
                "example_value": "man",
                "required": true
            }
        },
        "required": [
            "query"
        ]
    },
    "responses": [
        {
            "function_name": "Search_Hotel_Destination",
            "arguments": {
                "query": "Paris"
            },
            "observation": [
                {
                    "dest_id": "-1456928",
                    "search_type": "city",
                    "cc1": "fr",
                    "city_ufi": null,
                    "nr_hotels": 22137,
                    "dest_type": "city",
                    "city_name": "Paris",
                    "label": "Paris, Ile de France, France",
                    "lc": "en",
                    "image_url": "https://cf.bstatic.com/xdata/images/city/150x150/977239.jpg?k=c2409c69613bc168e54e0c4930e1436a0f378d7fe40d9c94f4a03595e0f423a8&o=",
                    "roundtrip": "GhAxNmJiNGE4N2ExYzkwMTdhIAAoATICZW46BVBhcmlzQABKAFAA",
                    "type": "ci",
                    "country": "France",
                    "name": "Paris",
                    "latitude": 48.85668,
                    "region": "Ile de France",
                    "hotels": 22137,
                    "longitude": 2.3514764
                },
                {
                    "dest_id": "2281",
                    "search_type": "district",
                    "name": "Paris City Centre",
                    "country": "France",
                    "type": "di",
                    "roundtrip": "GhAxNmJiNGE4N2ExYzkwMTdhIAEoATICZW46BVBhcmlzQABKAFAA",
                    "image_url": "https://cf.bstatic.com/xdata/images/district/150x150/56855.jpg?k=3fde2490119c56a4ea9c4e3b6c64eb0bc0c47936f2378a82bb1cdbc3a88b9326&o=",
                    "latitude": 48.85807,
                    "hotels": 5373,
                    "longitude": 2.330132,
                    "region": "Ile de France",
                    "cc1": "fr",
                    "dest_type": "district",
                    "nr_hotels": 5373,
                    "city_ufi": -1456928,
                    "city_name": "Paris",
                    "label": "Paris City Centre, Paris, Ile de France, France",
                    "lc": "en"
                },
                {
                    "dest_id": "735",
                    "search_type": "landmark",
                    "label": "Eiffel Tower, Paris, Ile de France, France",
                    "city_name": "Paris",
                    "lc": "en",
                    "cc1": "fr",
                    "dest_type": "landmark",
                    "nr_hotels": 53,
                    "city_ufi": -1456928,
                    "latitude": 48.8586,
                    "region": "Ile de France",
                    "landmark_type": 4,
                    "hotels": 53,
                    "longitude": 2.29398,
                    "image_url": "https://cf.bstatic.com/xdata/images/landmark/150x150/275259.jpg?k=99cd8db0df97c73360a62cbe70272fe0fa2c6c2d6f6040176a0488ad02ba165e&o=",
                    "roundtrip": "GhAxNmJiNGE4N2ExYzkwMTdhIAIoATICZW46BVBhcmlzQABKAFAA",
                    "type": "la",
                    "country": "France",
                    "name": "Eiffel Tower"
                }
            ]
        },
        {
            "function_name": "Search_Hotel_Destination",
            "arguments": {
                "query": "Paris"
            },
            "observation": [
                {
                    "dest_id": "-1456928",
                    "search_type": "city",
                    "label": "Paris, Ile de France, France",
                    "roundtrip": "GhAwMDAzNGE4Y2U2MmEwMjIxIAAoATICZW46BVBhcmlzQABKAFAA",
                    "image_url": "https://cf.bstatic.com/xdata/images/city/150x150/977239.jpg?k=c2409c69613bc168e54e0c4930e1436a0f378d7fe40d9c94f4a03595e0f423a8&o=",
                    "type": "ci",
                    "latitude": 48.85668,
                    "country": "France",
                    "lc": "en",
                    "region": "Ile de France",
                    "hotels": 22137,
                    "cc1": "fr",
                    "city_ufi": null,
                    "longitude": 2.3514764,
                    "name": "Paris",
                    "dest_type": "city",
                    "city_name": "Paris",
                    "nr_hotels": 22137
                },
                {
                    "dest_id": "2281",
                    "search_type": "district",
                    "lc": "en",
                    "region": "Ile de France",
                    "hotels": 5373,
                    "latitude": 48.85807,
                    "country": "France",
                    "roundtrip": "GhAwMDAzNGE4Y2U2MmEwMjIxIAEoATICZW46BVBhcmlzQABKAFAA",
                    "image_url": "https://cf.bstatic.com/xdata/images/district/150x150/56855.jpg?k=3fde2490119c56a4ea9c4e3b6c64eb0bc0c47936f2378a82bb1cdbc3a88b9326&o=",
                    "type": "di",
                    "label": "Paris City Centre, Paris, Ile de France, France",
                    "nr_hotels": 5373,
                    "dest_type": "district",
                    "city_name": "Paris",
                    "name": "Paris City Centre",
                    "cc1": "fr",
                    "city_ufi": -1456928,
                    "longitude": 2.330132
                },
                {
                    "dest_id": "735",
                    "search_type": "landmark",
                    "cc1": "fr",
                    "city_ufi": -1456928,
                    "longitude": 2.29398,
                    "name": "Eiffel Tower",
                    "dest_type": "landmark",
                    "city_name": "Paris",
                    "nr_hotels": 53,
                    "label": "Eiffel Tower, Paris, Ile de France, France",
                    "roundtrip": "GhAwMDAzNGE4Y2U2MmEwMjIxIAIoATICZW46BVBhcmlzQABKAFAA",
                    "image_url": "https://cf.bstatic.com/xdata/images/landmark/150x150/275259.jpg?k=99cd8db0df97c73360a62cbe70272fe0fa2c6c2d6f6040176a0488ad02ba165e&o=",
                    "type": "la",
                    "latitude": 48.8586,
                    "landmark_type": 4,
                    "country": "France",
                    "region": "Ile de France",
                    "lc": "en",
                    "hotels": 53
                }
            ]
        }
    ],
    "response_summary": "The API response provides information on three distinct locations in Paris, France. First, there's the city of Paris itself, located in the Ile de France region, with a latitude of 48.85668 and longitude of 2.3514764. It offers 22,137 hotels and is a popular destination for travelers. Next, the Paris City Centre district, situated at 48.85807 latitude and 2.330132 longitude, has 5,373 hotels available, making it a central hub for visitors. Lastly, the iconic Eiffel Tower, a major landmark in Paris at 48.8586 latitude and 2.29398 longitude, has 53 nearby hotels. This famous attraction is a must-visit for tourists exploring the city. All three locations are part of the Ile de France region and cater to different travel preferences, whether staying in the heart of the city or near its most recognizable monument.",
    "enhance_func_desc": "This API is ideal for travelers searching for hotel destinations. It retrieves location information including cities, districts, and landmarks based on a search query. The response provides key details such as geographic coordinates, number of available hotels, and regional classification, helping users identify suitable accommodation areas. Results cover various destination types from entire cities to specific attractions, supporting trip planning decisions.",
    "enhance_params_desc": {
        "enhanced_parameters": {
            "query": "Search term for locations, including cities, districts, landmarks, or countries."
        }
    },
    "enhance_resfield_desc": {
        "response_fields": [
            {
                "dest_id": {
                    "type": "String",
                    "description": "A unique identifier for the destination (e.g., '-1456928' for Paris)."
                },
                "search_type": {
                    "type": "String",
                    "description": "The type of search result (e.g., 'city', 'district', 'landmark')."
                },
                "cc1": {
                    "type": "String",
                    "description": "The country code (ISO 3166-1 alpha-2) for the destination (e.g., 'fr' for France)."
                },
                "city_ufi": {
                    "type": "Number",
                    "description": "The unique identifier for the city, if applicable (null if not applicable)."
                },
                "nr_hotels": {
                    "type": "Number",
                    "description": "The number of hotels available in the destination (e.g., 22137 for Paris)."
                },
                "dest_type": {
                    "type": "String",
                    "description": "The type of destination (e.g., 'city', 'district', 'landmark')."
                },
                "city_name": {
                    "type": "String",
                    "description": "The name of the city where the destination is located (e.g., 'Paris')."
                },
                "label": {
                    "type": "String",
                    "description": "A descriptive label for the destination, including region and country (e.g., 'Paris, Ile de France, France')."
                },
                "lc": {
                    "type": "String",
                    "description": "The language code for the response (e.g., 'en' for English)."
                },
                "image_url": {
                    "type": "String",
                    "description": "A URL to an image representing the destination (e.g., a city or landmark image)."
                },
                "roundtrip": {
                    "type": "String",
                    "description": "A unique identifier or token for roundtrip functionality."
                },
                "type": {
                    "type": "String",
                    "description": "A short code representing the destination type (e.g., 'ci' for city, 'di' for district, 'la' for landmark)."
                },
                "country": {
                    "type": "String",
                    "description": "The name of the country where the destination is located (e.g., 'France')."
                },
                "name": {
                    "type": "String",
                    "description": "The name of the destination (e.g., 'Paris', 'Paris City Centre', 'Eiffel Tower')."
                },
                "latitude": {
                    "type": "Number",
                    "description": "The geographic latitude of the destination (e.g., 48.85668 for Paris)."
                },
                "region": {
                    "type": "String",
                    "description": "The region or administrative area where the destination is located (e.g., 'Ile de France')."
                },
                "hotels": {
                    "type": "Number",
                    "description": "The number of hotels available in the destination (synonym for 'nr_hotels')."
                },
                "longitude": {
                    "type": "Number",
                    "description": "The geographic longitude of the destination (e.g., 2.3514764 for Paris)."
                },
                "landmark_type": {
                    "type": "Number",
                    "description": "A numeric identifier for the type of landmark, if applicable (e.g., 4 for Eiffel Tower)."
                }
            }
        ]
    },
    "params_desc_list": null,
    "response_desc_list": [
        {
            "path_name": "$[].dest_id",
            "name": "dest_id",
            "description": "A unique identifier for the destination (e.g., '-1456928' for Paris)."
        },
        {
            "path_name": "$[].search_type",
            "name": "search_type",
            "description": "The type of search result (e.g., 'city', 'district', 'landmark')."
        },
        {
            "path_name": "$[].cc1",
            "name": "cc1",
            "description": "The country code (ISO 3166-1 alpha-2) for the destination (e.g., 'fr' for France)."
        },
        {
            "path_name": "$[].city_ufi",
            "name": "city_ufi",
            "description": "The unique identifier for the city, if applicable (null if not applicable)."
        },
        {
            "path_name": "$[].nr_hotels",
            "name": "nr_hotels",
            "description": "The number of hotels available in the destination (e.g., 22137 for Paris)."
        },
        {
            "path_name": "$[].dest_type",
            "name": "dest_type",
            "description": "The type of destination (e.g., 'city', 'district', 'landmark')."
        },
        {
            "path_name": "$[].city_name",
            "name": "city_name",
            "description": "The name of the city where the destination is located (e.g., 'Paris')."
        },
        {
            "path_name": "$[].label",
            "name": "label",
            "description": "A descriptive label for the destination, including region and country (e.g., 'Paris, Ile de France, France')."
        },
        {
            "path_name": "$[].lc",
            "name": "lc",
            "description": "The language code for the response (e.g., 'en' for English)."
        },
        {
            "path_name": "$[].image_url",
            "name": "image_url",
            "description": "A URL to an image representing the destination (e.g., a city or landmark image)."
        },
        {
            "path_name": "$[].roundtrip",
            "name": "roundtrip",
            "description": "A unique identifier or token for roundtrip functionality."
        },
        {
            "path_name": "$[].type",
            "name": "type",
            "description": "A short code representing the destination type (e.g., 'ci' for city, 'di' for district, 'la' for landmark)."
        },
        {
            "path_name": "$[].country",
            "name": "country",
            "description": "The name of the country where the destination is located (e.g., 'France')."
        },
        {
            "path_name": "$[].name",
            "name": "name",
            "description": "The name of the destination (e.g., 'Paris', 'Paris City Centre', 'Eiffel Tower')."
        },
        {
            "path_name": "$[].latitude",
            "name": "latitude",
            "description": "The geographic latitude of the destination (e.g., 48.85668 for Paris)."
        },
        {
            "path_name": "$[].region",
            "name": "region",
            "description": "The region or administrative area where the destination is located (e.g., 'Ile de France')."
        },
        {
            "path_name": "$[].hotels",
            "name": "hotels",
            "description": "The number of hotels available in the destination (synonym for 'nr_hotels')."
        },
        {
            "path_name": "$[].longitude",
            "name": "longitude",
            "description": "The geographic longitude of the destination (e.g., 2.3514764 for Paris)."
        },
        {
            "path_name": "$[].landmark_type",
            "name": "landmark_type",
            "description": "A numeric identifier for the type of landmark, if applicable (e.g., 4 for Eiffel Tower)."
        }
    ],
    "depends_on": [
        {
            "target_api_params": "query",
            "reason": "The 'query' parameter in the target API requires names of locations, cities, districts, etc. The source API's 'name' field provides exactly this type of information (e.g., 'New York', 'John F. Kennedy International Airport'). The data types match (both are strings), and the context is appropriate as both APIs deal with location-based searches. This creates a potential business association where a user might search for car rental locations first and then look for hotels in the same area.",
            "source_jsonpath": "$[*].name",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Car_Auto-Complete"
        },
        {
            "target_api_params": "query",
            "reason": "The 'city' field in the source API also provides location names (e.g., 'New York'), which matches the requirement of the target API's 'query' parameter. The data types match, and the context is relevant for hotel destination searches based on city names.",
            "source_jsonpath": "$[*].city",
            "confidence": 90,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Car_Auto-Complete"
        },
        {
            "target_api_params": "query",
            "reason": "The 'query' parameter in the target API requires names of locations, cities, districts, etc., which matches the source API's response fields for city and airport names. The source API provides detailed location information including city names (e.g., 'New York') and airport names (e.g., 'John F. Kennedy International Airport'), which can be directly used as input for the target API's query parameter.",
            "source_jsonpath": "$[*].name",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Flight_Location"
        },
        {
            "target_api_params": "query",
            "reason": "The 'query' parameter in the target API requires names of locations, cities, districts, etc. The source API's 'tag' field in both 'closest_landmarks' and 'popular_landmarks' provides names of popular attractions (e.g., 'Mumbai Domestic Terminal 1', 'ISKCON', 'Vihar Lake'). These names can be directly used as search queries for hotel destinations, creating a business association where travelers might search for hotels near popular attractions.",
            "source_jsonpath": "$.closest_landmarks[].tag",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Get_Popular_Attraction_Near_By"
        },
        {
            "target_api_params": "query",
            "reason": "The 'tag' field in 'popular_landmarks' also provides names of popular attractions, which can be used as search queries for hotel destinations. This is another valid business association where travelers might search for hotels near popular attractions.",
            "source_jsonpath": "$.popular_landmarks[].tag",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Get_Popular_Attraction_Near_By"
        },
        {
            "target_api_params": "query",
            "reason": "The 'query' parameter in the target API requires names of locations, cities, districts, etc. The source API's 'bCityName' field in the 'ufiDetails' object provides the city name (e.g., 'Mumbai'). This creates a potential business association where a traveler might search for hotels in the same city where attractions are located.",
            "source_jsonpath": "$.products[].ufiDetails.bCityName",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Attractions"
        },
        {
            "target_api_params": "query",
            "reason": "The 'name' field in the 'ufiFilters' array provides location names (e.g., 'Mumbai', 'Andheri'). These are valid location names that could be used as search queries for hotels.",
            "source_jsonpath": "$.filterOptions.ufiFilters[].name",
            "confidence": 90,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Attractions"
        },
        {
            "target_api_params": "query",
            "reason": "The 'query' parameter in the target API requires names of locations, cities, districts, etc. The source API's 'name' field provides exact location names (e.g., 'Empire State Building'), which can be directly used as input for the target API's query parameter. The data types match (both are strings), and there is a clear business association where a user might want to search for hotels near a specific landmark or location.",
            "source_jsonpath": "$[*].name",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Location_to_Lat_Long"
        },
        {
            "target_api_params": "query",
            "reason": "The 'query' parameter in the target API requires names of locations, cities, districts, etc. The source API's 'cityName' field in the 'destinations' array provides exact city names (e.g., 'New York', 'York'). This creates a potential business association where a traveler might search for hotels in the same city as the attractions they are interested in.",
            "source_jsonpath": "$.destinations[].cityName",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Attraction_Location"
        },
        {
            "target_api_params": "query",
            "reason": "The 'query' parameter in the target API requires names of locations, cities, districts, etc. The source API's 'arrivalAirport' and 'departureAirport' fields provide city names (e.g., 'Ahmedabad', 'Mumbai') which can be used as search queries for hotel destinations. This creates a potential business association where a traveler might want to search for hotels in the city they are arriving at or departing from.",
            "source_jsonpath": "$.flightOffers[*].segments[*].legs[*].arrivalAirport.cityName",
            "confidence": 90,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Flights_Multi_Stops"
        },
        {
            "target_api_params": "query",
            "reason": "The 'departureAirport' field in the source API also provides city names that can be used as search queries for hotel destinations. This is similar to the arrivalAirport scenario, where travelers might search for hotels in their departure city.",
            "source_jsonpath": "$.flightOffers[*].segments[*].legs[*].departureAirport.cityName",
            "confidence": 90,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Flights_Multi_Stops"
        },
        {
            "target_api_params": "query",
            "reason": "The 'arrivalAirport' field in the segments array provides city names that can be used as search queries for hotel destinations. This is another valid source for city names that travelers might want to search for hotels in.",
            "source_jsonpath": "$.flightOffers[*].segments[*].arrivalAirport.cityName",
            "confidence": 90,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Flights_Multi_Stops"
        },
        {
            "target_api_params": "query",
            "reason": "The 'departureAirport' field in the segments array provides city names that can be used as search queries for hotel destinations. This is another valid source for city names that travelers might want to search for hotels in.",
            "source_jsonpath": "$.flightOffers[*].segments[*].departureAirport.cityName",
            "confidence": 90,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Flights_Multi_Stops"
        },
        {
            "target_api_params": "query",
            "reason": "The 'query' parameter in the target API requires names of locations, cities, districts, etc. The source API's 'arrivalAirport' and 'departureAirport' fields provide city names (e.g., 'New Delhi', 'Mumbai') which could be used as search queries for hotel destinations. This creates a potential business association where a traveler might want to search for hotels in the same city as their flight destination or departure.",
            "source_jsonpath": "$.flightOffers[*].segments[*].legs[*].arrivalAirport.cityName",
            "confidence": 90,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Flights"
        },
        {
            "target_api_params": "query",
            "reason": "The 'query' parameter in the target API requires names of locations, cities, districts, etc. The source API's 'arrivalAirport' and 'departureAirport' fields provide airport names (e.g., 'Delhi International Airport', 'Chhatrapati Shivaji International Airport Mumbai') which could be used as search queries for hotel destinations near airports. This creates a potential business association where a traveler might want to search for hotels near their arrival or departure airport.",
            "source_jsonpath": "$.flightOffers[*].segments[*].legs[*].arrivalAirport.name",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Flights"
        },
        {
            "target_api_params": "query",
            "reason": "The 'query' parameter in the target API requires names of locations, cities, districts, etc. The source API's 'arrivalAirport' and 'departureAirport' fields provide country names (e.g., 'India') which could be used as search queries for hotel destinations in a specific country. This creates a potential business association where a traveler might want to search for hotels in the same country as their flight destination or departure.",
            "source_jsonpath": "$.flightOffers[*].segments[*].legs[*].arrivalAirport.countryName",
            "confidence": 80,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Flights"
        },
        {
            "target_api_params": "query",
            "reason": "The 'query' parameter in the target API requires names of locations, cities, districts, etc. The source API's 'locationName' field in supplierLocations provides exact location names (e.g., 'John F Kennedy International Airport'). This creates a potential business association where a traveler might want to search for hotels near car rental locations.",
            "source_jsonpath": "$.content.map.supplierLocations[*].metaData.locationName",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Car_Search"
        },
        {
            "target_api_params": "query",
            "reason": "The 'name' field in the route_info.dropoff provides location names (e.g., 'John F Kennedy International Airport'), which matches the requirement of the target API's 'query' parameter. This could be used to search for hotels near the car drop-off location.",
            "source_jsonpath": "$.search_results[*].route_info.dropoff.name",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Car_Search"
        },
        {
            "target_api_params": "query",
            "reason": "The 'address' field in the route_info.dropoff provides detailed location information, which includes city and country names. This could be used as input for the target API's 'query' parameter to search for hotels in the same area.",
            "source_jsonpath": "$.search_results[*].route_info.dropoff.address",
            "confidence": 80,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Car_Search"
        },
        {
            "target_api_params": "query",
            "reason": "The 'query' parameter in the target API requires a location name (e.g., city, district, landmark). The source API's response includes 'city' and 'hotel_name' fields which contain location-specific information. While 'hotel_name' is too specific, the 'city' field (e.g., 'Nagaon', 'Mumbai') matches the requirement for a general location name that could be used as input for the target API's query parameter.",
            "source_jsonpath": "$.result[].city",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Hotels_By_Coordinates"
        },
        {
            "target_api_params": "query",
            "reason": "The 'query' parameter in the target API requires names of locations, cities, districts, etc., which matches the 'name' field in the source API response. The source API provides names of cities and states (e.g., 'New York City', 'New York'), which can be directly used as input for the target API's query parameter. The data types match (both are strings), and the context is appropriate for searching hotel destinations based on restaurant search results.",
            "source_jsonpath": "$[*].name",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Restaurants"
        },
        {
            "target_api_params": "query",
            "reason": "The 'query' parameter in the target API requires names of locations, cities, districts, etc. The source API's 'dropOffLocation' field provides detailed location information including city, description, and establishment name (e.g., 'The Taj Mahal Palace, Mumbai'). This creates a potential business association where a traveler might search for hotels near their taxi drop-off location.",
            "source_jsonpath": "$.journeys[*].dropOffLocation.name",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Taxi"
        },
        {
            "target_api_params": "query",
            "reason": "The 'city' field in the source API's 'dropOffLocation' provides the city name (e.g., 'Mumbai'), which matches the type and purpose of the target API's 'query' parameter. This is a strong match for searching hotels in the same city.",
            "source_jsonpath": "$.journeys[*].dropOffLocation.city",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Taxi"
        },
        {
            "target_api_params": "query",
            "reason": "The 'query' parameter in the target API requires names of locations, cities, districts, etc. The source API's 'name' field in the response provides city names (e.g., 'Chinatown', 'Brooklyn'), which exactly match the requirement. This creates a potential business association where a traveler might want to search for hotels in nearby cities identified by the source API.",
            "source_jsonpath": "$[*].name",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Get_Nearby_Cities"
        },
        {
            "target_api_params": "query",
            "reason": "The 'query' parameter in the target API requires a string input representing location names, cities, districts, etc. The source API's response includes a 'wishlistName' field (e.g., 'Mumbai') which matches the required data type and content. This creates a potential business association where a user might search for hotels in a destination they previously viewed or wishlisted.",
            "source_jsonpath": "$.hotels[].property.wishlistName",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Hotels"
        }
    ],
    "verified": true
}