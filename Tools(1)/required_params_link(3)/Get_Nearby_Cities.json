{
    "name": "Get_Nearby_Cities",
    "docs_row": {
        "name": "Get_Nearby_Cities",
        "endpoint": "/api/v1/hotels/getNearbyCities",
        "func_description": "Search for cities around a given geographical coordinates. ",
        "parameters": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "String",
                    "description": "Latitude of the searched location. latitude can be retrieved from api/v1/meta/locationToLatLong(Location to Lat Long) endpoint in Meta collection.",
                    "example_value": "65.9667",
                    "required": true
                },
                "longitude": {
                    "type": "String",
                    "description": "Longitude of the searched location. longitude can be retrieved from api/v1/meta/locationToLatLong(Location to Lat Long) endpoint in Meta collection.",
                    "example_value": "-18.5333",
                    "required": true
                },
                "languagecode": {
                    "type": "String",
                    "description": "To obtain the response data in a specific language, enter the languagecode. languagecode can be retrieved from api/v1/meta/getLanguages(Get Languages\n) endpoint in Meta collection.",
                    "example_value": "en-us",
                    "required": false
                }
            },
            "required": [
                "latitude",
                "longitude"
            ]
        }
    },
    "instance": [],
    "category": null,
    "tool": null,
    "api_idx": 22,
    "params": {
        "type": "object",
        "properties": {
            "latitude": {
                "type": "String",
                "description": "Latitude of the searched location. latitude can be retrieved from api/v1/meta/locationToLatLong(Location to Lat Long) endpoint in Meta collection.",
                "example_value": "65.9667",
                "required": true
            },
            "longitude": {
                "type": "String",
                "description": "Longitude of the searched location. longitude can be retrieved from api/v1/meta/locationToLatLong(Location to Lat Long) endpoint in Meta collection.",
                "example_value": "-18.5333",
                "required": true
            },
            "languagecode": {
                "type": "String",
                "description": "To obtain the response data in a specific language, enter the languagecode. languagecode can be retrieved from api/v1/meta/getLanguages(Get Languages\n) endpoint in Meta collection.",
                "example_value": "en-us",
                "required": false
            }
        },
        "required": [
            "latitude",
            "longitude"
        ]
    },
    "responses": [
        {
            "function_name": "Get_Nearby_Cities",
            "arguments": {
                "latitude": "40.7128",
                "longitude": "-74.0060"
            },
            "observation": [
                {
                    "cc1": "us",
                    "country": "United States",
                    "region": null,
                    "longitude": -73.996696472168,
                    "dest_id": 20085521,
                    "nr_hotels": 1,
                    "name": "Chinatown",
                    "dest_type": "city",
                    "latitude": 40.7164001464844
                },
                {
                    "longitude": -73.9845070528099,
                    "country": "United States",
                    "cc1": "us",
                    "region": "New York State",
                    "latitude": 40.6960857950378,
                    "name": "Brooklyn",
                    "dest_type": "city",
                    "dest_id": 20085207,
                    "nr_hotels": 531
                },
                {
                    "country": "United States",
                    "cc1": "us",
                    "region": "New Jersey",
                    "longitude": -74.0327987670898,
                    "nr_hotels": 83,
                    "dest_id": 20081434,
                    "dest_type": "city",
                    "name": "Hoboken",
                    "latitude": 40.7439002990723
                }
            ]
        },
        {
            "function_name": "Get_Nearby_Cities",
            "arguments": {
                "latitude": "40.7128",
                "longitude": "-74.0060"
            },
            "observation": [
                {
                    "dest_id": 20085521,
                    "region": null,
                    "longitude": -73.996696472168,
                    "nr_hotels": 1,
                    "name": "Chinatown",
                    "latitude": 40.7164001464844,
                    "country": "United States",
                    "dest_type": "city",
                    "cc1": "us"
                },
                {
                    "dest_type": "city",
                    "cc1": "us",
                    "country": "United States",
                    "latitude": 40.6960857950378,
                    "name": "Brooklyn",
                    "nr_hotels": 531,
                    "longitude": -73.9845070528099,
                    "region": "New York State",
                    "dest_id": 20085207
                },
                {
                    "dest_type": "city",
                    "cc1": "us",
                    "country": "United States",
                    "latitude": 40.7439002990723,
                    "name": "Hoboken",
                    "nr_hotels": 83,
                    "longitude": -74.0327987670898,
                    "dest_id": 20081434,
                    "region": "New Jersey"
                }
            ]
        }
    ],
    "response_summary": "The API response provides information about three cities in the United States. First, there's Chinatown, located in New York with coordinates at approximately 40.7164\u00b0N latitude and -73.9967\u00b0W longitude. It has only one hotel available. Next is Brooklyn, also in New York State, positioned around 40.6961\u00b0N latitude and -73.9845\u00b0W longitude, offering a much larger selection with 531 hotels. Lastly, Hoboken in New Jersey is situated near 40.7439\u00b0N latitude and -74.0328\u00b0W longitude, with 83 hotels listed. All three locations are classified as cities in the dataset.",
    "enhance_func_desc": "This API is ideal for travelers and planners seeking accommodation options near specific coordinates. It retrieves nearby cities with their hotel availability count and precise geographic coordinates. Users input latitude/longitude to receive city details including name, location, and hotel quantity, helping them compare lodging options in adjacent areas. The response includes city classification and exact positioning for accurate navigation.",
    "enhance_params_desc": {
        "enhanced_parameters": {
            "latitude": "Geographic coordinate specifying north-south position for search.",
            "longitude": "Geographic coordinate specifying east-west position for search.",
            "languagecode": "Language preference for the response data (e.g., 'en-us')."
        }
    },
    "enhance_resfield_desc": {
        "response_fields": [
            {
                "cc1": {
                    "type": "String",
                    "description": "The country code (ISO 3166-1 alpha-2) representing the country where the city is located (e.g., 'us' for United States)."
                },
                "country": {
                    "type": "String",
                    "description": "The full name of the country where the city is located (e.g., 'United States')."
                },
                "region": {
                    "type": "String",
                    "description": "The region or state within the country where the city is located (e.g., 'New York State'). Can be null if not applicable."
                },
                "longitude": {
                    "type": "Number",
                    "description": "The longitude coordinate of the city's location (e.g., -73.996696472168)."
                },
                "dest_id": {
                    "type": "Number",
                    "description": "A unique identifier for the destination (e.g., 20085521)."
                },
                "nr_hotels": {
                    "type": "Number",
                    "description": "The number of hotels available in the city (e.g., 1, 531, 83)."
                },
                "name": {
                    "type": "String",
                    "description": "The name of the city (e.g., 'Chinatown', 'Brooklyn', 'Hoboken')."
                },
                "dest_type": {
                    "type": "String",
                    "description": "The type of destination (e.g., 'city')."
                },
                "latitude": {
                    "type": "Number",
                    "description": "The latitude coordinate of the city's location (e.g., 40.7164001464844)."
                }
            }
        ]
    },
    "params_desc_list": null,
    "response_desc_list": [
        {
            "path_name": "$[].cc1",
            "name": "cc1",
            "description": "The country code (ISO 3166-1 alpha-2) representing the country where the city is located (e.g., 'us' for United States)."
        },
        {
            "path_name": "$[].country",
            "name": "country",
            "description": "The full name of the country where the city is located (e.g., 'United States')."
        },
        {
            "path_name": "$[].region",
            "name": "region",
            "description": "The region or state within the country where the city is located (e.g., 'New York State'). Can be null if not applicable."
        },
        {
            "path_name": "$[].longitude",
            "name": "longitude",
            "description": "The longitude coordinate of the city's location (e.g., -73.996696472168)."
        },
        {
            "path_name": "$[].dest_id",
            "name": "dest_id",
            "description": "A unique identifier for the destination (e.g., 20085521)."
        },
        {
            "path_name": "$[].nr_hotels",
            "name": "nr_hotels",
            "description": "The number of hotels available in the city (e.g., 1, 531, 83)."
        },
        {
            "path_name": "$[].name",
            "name": "name",
            "description": "The name of the city (e.g., 'Chinatown', 'Brooklyn', 'Hoboken')."
        },
        {
            "path_name": "$[].dest_type",
            "name": "dest_type",
            "description": "The type of destination (e.g., 'city')."
        },
        {
            "path_name": "$[].latitude",
            "name": "latitude",
            "description": "The latitude coordinate of the city's location (e.g., 40.7164001464844)."
        }
    ],
    "depends_on": [
        {
            "target_api_params": "latitude",
            "reason": "The 'latitude' parameter in the target API requires the latitude of a location to find nearby cities. The source API's response includes a 'coordinates' field with 'latitude' values (e.g., '40.6450004577637'). This matches the data type (String) and provides the exact information needed for the target API. The source API's response can directly supply the latitude for the target API's input.",
            "source_jsonpath": "$[*].coordinates.latitude",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Car_Auto-Complete"
        },
        {
            "target_api_params": "latitude",
            "reason": "The 'latitude' parameter in the target API requires a specific latitude value for searching nearby cities. The source API's response fields include 'latitude' values for both locations and restaurants (e.g., 42.423985, 47.498726). The data types match (String vs float, but float can be converted to String), and the source API provides the exact latitude information needed by the target API. This creates a potential business association where a traveler might want to find nearby cities based on the coordinates of a restaurant they are interested in.",
            "source_jsonpath": "$[*].latitude",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Restaurants"
        },
        {
            "target_api_params": "latitude",
            "reason": "The 'latitude' parameter in the target API requires a string representation of the latitude coordinate. The source API's 'geometry.location.lat' field provides the exact latitude value in numeric format (e.g., 40.7484405). Although the data types differ (numeric vs string), the numeric value can be easily converted to a string. This creates a hard dependency as the source API is explicitly mentioned in the target API's description as the provider of latitude and longitude values.",
            "source_jsonpath": "$[*].geometry.location.lat",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Location_to_Lat_Long"
        },
        {
            "target_api_params": "latitude",
            "reason": "The 'latitude' parameter in the target API requires the latitude of a location. The source API's 'route_info.pickup' and 'route_info.dropoff' fields provide latitude values (e.g., '40.663756') which match the required data type (String). This creates a potential business association where a traveler might want to find nearby cities to their car rental pickup or dropoff location.",
            "source_jsonpath": "$.search_results[*].route_info.pickup.latitude",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Car_Search"
        },
        {
            "target_api_params": "latitude",
            "reason": "The 'latitude' parameter in the target API requires the latitude of a location. The source API's 'supplier_info' field provides latitude values (e.g., '40.663756') which match the required data type (String). This creates a potential business association where a traveler might want to find nearby cities to their car rental supplier's location.",
            "source_jsonpath": "$.search_results[*].supplier_info.latitude",
            "confidence": 90,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Car_Search"
        },
        {
            "target_api_params": "latitude",
            "reason": "The 'latitude' parameter in the target API requires the latitude of a location. The source API's 'content.map.supplierLocations[*].supplierPinContent.latLong.latitude' field provides latitude values (e.g., 40.663756) which can be converted to the required String data type. This creates a potential business association where a traveler might want to find nearby cities to their car rental supplier's location.",
            "source_jsonpath": "$.content.map.supplierLocations[*].supplierPinContent.latLong.latitude",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Car_Search"
        },
        {
            "target_api_params": "latitude",
            "reason": "The 'latitude' parameter in the target API requires the latitude of a location to find nearby cities. The source API's response includes 'latitude' fields for each restaurant (e.g., 40.767174, 40.757282), which matches the data type (String) and format required by the target API. This creates a potential business association where a user might want to find nearby cities based on the location of restaurants they are interested in.",
            "source_jsonpath": "$.results[*].latitude",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "List_Restaurants_By_Search_Query"
        },
        {
            "target_api_params": "latitude",
            "reason": "The 'latitude' parameter in the target API requires the latitude of a location to find nearby cities. The source API's response includes a 'latitude' field (e.g., 40.724686) which provides the exact latitude of the restaurant. This creates a potential business association where a traveler might want to find nearby cities based on the location of a restaurant they are interested in.",
            "source_jsonpath": "$.latitude",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Get_restaurant_details"
        },
        {
            "target_api_params": "latitude",
            "reason": "The 'latitude' parameter in the target API requires the latitude of a location. The source API's 'pickupLocation' field includes a 'latLng' object with a 'latitude' value that matches the required data type (String). This creates a potential business association where a traveler might want to find nearby cities based on the pickup location of their taxi ride.",
            "source_jsonpath": "$.journeys[*].pickupLocation.latLng.latitude",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Taxi"
        },
        {
            "target_api_params": "latitude",
            "reason": "The 'latitude' parameter in the target API requires the latitude of a location. The source API's 'dropOffLocation' field includes a 'latLng' object with a 'latitude' value that matches the required data type (String). This creates a potential business association where a traveler might want to find nearby cities based on the drop-off location of their taxi ride.",
            "source_jsonpath": "$.journeys[*].dropOffLocation.latLng.latitude",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Taxi"
        },
        {
            "target_api_params": "latitude",
            "reason": "The 'latitude' parameter in the target API requires the latitude of a searched location. The source API's response fields include 'latitude' values for various destinations (e.g., 48.85807 for Paris City Centre). The data types match (String vs. numeric, but numeric can be converted to String), and the context is appropriate as hotel destinations naturally have geographic coordinates that could be used to find nearby cities.",
            "source_jsonpath": "$[*].latitude",
            "confidence": 95,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Hotel_Destination"
        },
        {
            "target_api_params": "latitude",
            "reason": "The 'latitude' parameter in the target API requires the latitude of a specific location. The source API's response field '$.hotels[*].property.latitude' provides the exact latitude of hotel properties (e.g., '19.1092056444051'). The data types match (both are strings representing latitude values), and there is a clear business association where travelers might want to find nearby cities based on the latitude of a hotel they are considering.",
            "source_jsonpath": "$.hotels[*].property.latitude",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Hotels"
        },
        {
            "target_api_params": "latitude",
            "reason": "The 'latitude' parameter in the target API requires the latitude of a location to find nearby cities. The source API's response fields include 'latitude' with exact geographic coordinates (e.g., '40.759155'). The data types match (both are strings), and the source API provides the precise latitude needed for the target API. This creates a hard dependency as the source API's latitude is a necessary prerequisite for calling the target API.",
            "source_jsonpath": "$[*].latitude",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Taxi_Search_Location"
        },
        {
            "target_api_params": "latitude",
            "reason": "The 'latitude' parameter in the target API requires the latitude of a location to find nearby cities. The source API's response includes 'latitude' fields for each hotel, which directly matches the data type and purpose of the target parameter. This creates a hard dependency as the source API provides the exact required input for the target API.",
            "source_jsonpath": "$.result[*].latitude",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Hotels_By_Coordinates"
        },
        {
            "target_api_params": "longitude",
            "reason": "The 'longitude' parameter in the target API requires the longitude of a specific location. The source API's response includes 'coordinates.longitude' fields which provide exact longitude values for locations (e.g., -73.7870025634766 for JFK Airport). This creates a hard dependency as the source API directly provides the required longitude data that can be used as input for the target API.",
            "source_jsonpath": "$[*].coordinates.longitude",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Car_Auto-Complete"
        },
        {
            "target_api_params": "longitude",
            "reason": "The 'longitude' parameter in the target API requires the longitude of a location to find nearby cities. The source API's response fields include 'longitude' values for both locations and restaurants (e.g., -74.88397 for New York state and 19.070456 for New York Caf\u00e9). The data type matches (String), and the values are directly usable. This creates a potential business association where a traveler might want to find nearby cities after searching for restaurants in a specific location.",
            "source_jsonpath": "$[*].longitude",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Restaurants"
        },
        {
            "target_api_params": "longitude",
            "reason": "The 'longitude' parameter in the target API requires the longitude of a specific location. The source API's response includes a 'geometry.location.lng' field that provides the exact longitude of the queried location. This is a direct match in terms of data type and purpose, as the source API is designed to convert location names into precise geographic coordinates, which is exactly what the target API needs.",
            "source_jsonpath": "$[*].geometry.location.lng",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Location_to_Lat_Long"
        },
        {
            "target_api_params": "longitude",
            "reason": "The 'longitude' parameter in the target API requires the longitude of a searched location. The source API's response includes 'longitude' fields for various landmarks (e.g., 72.826211 for ISKCON). While these are specific to attractions rather than cities, there's a potential business association where a traveler might want to find nearby cities based on attraction coordinates. The data types match (both are Strings representing longitude values).",
            "source_jsonpath": "$.closest_landmarks[].longitude",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Get_Popular_Attraction_Near_By"
        },
        {
            "target_api_params": "longitude",
            "reason": "The 'longitude' field in popular_landmarks also matches the required data type and could be used similarly to closest_landmarks for finding nearby cities. However, this remains a business association rather than a direct prerequisite.",
            "source_jsonpath": "$.popular_landmarks[].longitude",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Get_Popular_Attraction_Near_By"
        },
        {
            "target_api_params": "longitude",
            "reason": "The 'longitude' parameter in the target API requires the longitude of a location to find nearby cities. The source API's 'route_info.dropoff' and 'route_info.pickup' fields both contain 'longitude' values that match the required data type (String) and format. This creates a potential business association where a traveler might want to find nearby cities to their car rental drop-off or pick-up location.",
            "source_jsonpath": "$.search_results[*].route_info.dropoff.longitude",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Car_Search"
        },
        {
            "target_api_params": "longitude",
            "reason": "The 'longitude' parameter in the target API requires the longitude of a location to find nearby cities. The source API's 'supplier_info' field contains 'longitude' values that match the required data type (String) and format. This creates a potential business association where a traveler might want to find nearby cities to their car rental supplier's location.",
            "source_jsonpath": "$.search_results[*].supplier_info.longitude",
            "confidence": 90,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Car_Search"
        },
        {
            "target_api_params": "longitude",
            "reason": "The 'longitude' parameter in the target API requires the longitude of a location to find nearby cities. The source API's 'content.map.supplierLocations[*].supplierPinContent.latLong.longitude' field contains 'longitude' values that match the required data type (Number) but can be converted to String. This creates a potential business association where a traveler might want to find nearby cities to their car rental supplier's location.",
            "source_jsonpath": "$.content.map.supplierLocations[*].supplierPinContent.latLong.longitude",
            "confidence": 85,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Car_Search"
        },
        {
            "target_api_params": "longitude",
            "reason": "The 'longitude' parameter in the target API requires the longitude of a location to find nearby cities. The source API's response includes a 'longitude' field that provides the exact geographic coordinates of a restaurant. This creates a potential business association where a traveler might want to find nearby cities based on the location of a restaurant they are interested in.",
            "source_jsonpath": "$.longitude",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Get_restaurant_details"
        },
        {
            "target_api_params": "longitude",
            "reason": "The 'longitude' parameter in the target API requires the longitude of a specific location. The source API's response includes 'longitude' fields for each restaurant listing, which provides exact geographic coordinates. This creates a potential business association where a traveler might want to find nearby cities based on the longitude of a restaurant they are interested in.",
            "source_jsonpath": "$.results[*].longitude",
            "confidence": 90,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "List_Restaurants_By_Search_Query"
        },
        {
            "target_api_params": "longitude",
            "reason": "The 'longitude' parameter in the target API requires the longitude of a location to find nearby cities. The source API's response field '$.hotels[*].property.longitude' provides the exact longitude of hotel properties. This creates a potential business association where a traveler might want to find nearby cities based on the longitude of a hotel they are considering.",
            "source_jsonpath": "$.hotels[*].property.longitude",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Hotels"
        },
        {
            "target_api_params": "longitude",
            "reason": "The 'longitude' parameter in the target API requires the longitude of a location to find nearby cities. The source API's 'pickupLocation' and 'dropOffLocation' fields in the response include 'latLng' objects that contain both latitude and longitude values. The data type matches (String), and the context suggests that a user might want to find nearby cities to either the pickup or drop-off location of a taxi ride.",
            "source_jsonpath": "$.journeys[*].pickupLocation.latLng.longitude",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Taxi"
        },
        {
            "target_api_params": "longitude",
            "reason": "Similarly, the 'dropOffLocation' field also contains a 'latLng' object with longitude information. This could be used to find nearby cities to the drop-off location of a taxi ride, which is a plausible business scenario.",
            "source_jsonpath": "$.journeys[*].dropOffLocation.latLng.longitude",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Taxi"
        },
        {
            "target_api_params": "longitude",
            "reason": "The 'longitude' parameter in the target API requires the longitude of a specific location. The source API's response fields include 'longitude' with exact geographic coordinates (e.g., -73.99545). The data types match (both are strings), and the source API provides the necessary longitude information that can be directly used as input for the target API. This establishes a hard dependency as the source API's longitude is a prerequisite for calling the target API.",
            "source_jsonpath": "$[*].longitude",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Taxi_Search_Location"
        },
        {
            "target_api_params": "longitude",
            "reason": "The 'longitude' parameter in the target API requires the longitude of a location to find nearby cities. The source API's response includes a 'longitude' field for each hotel, which matches the data type and purpose of the target parameter. This creates a potential business association where a traveler might want to find nearby cities based on the longitude of a hotel they are considering.",
            "source_jsonpath": "$.result[*].longitude",
            "confidence": 95,
            "dependency_relationship": "Soft Dependency(Business-association)",
            "source_api": "Search_Hotels_By_Coordinates"
        },
        {
            "target_api_params": "longitude",
            "reason": "The 'longitude' parameter in the target API requires the longitude of a specific location. The source API's response fields include 'longitude' values for various destinations (e.g., 2.330132 for Paris City Centre). The data types match (both are strings representing longitude values), and the source API provides the exact geographic coordinates needed by the target API.",
            "source_jsonpath": "$[*].longitude",
            "confidence": 100,
            "dependency_relationship": "Hard Dependency(Prerequisite API)",
            "source_api": "Search_Hotel_Destination"
        }
    ],
    "verified": true
}