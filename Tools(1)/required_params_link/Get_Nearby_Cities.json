{
    "name": "Get_Nearby_Cities",
    "docs_row": {
        "name": "Get_Nearby_Cities",
        "endpoint": "/api/v1/hotels/getNearbyCities",
        "func_description": "Search for cities around a given geographical coordinates. ",
        "parameters": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "String",
                    "description": "Latitude of the searched location. latitude can be retrieved from api/v1/meta/locationToLatLong(Location to Lat Long) endpoint in Meta collection.",
                    "example_value": "65.9667",
                    "required": true
                },
                "longitude": {
                    "type": "String",
                    "description": "Longitude of the searched location. longitude can be retrieved from api/v1/meta/locationToLatLong(Location to Lat Long) endpoint in Meta collection.",
                    "example_value": "-18.5333",
                    "required": true
                },
                "languagecode": {
                    "type": "String",
                    "description": "To obtain the response data in a specific language, enter the languagecode. languagecode can be retrieved from api/v1/meta/getLanguages(Get Languages\n) endpoint in Meta collection.",
                    "example_value": "en-us",
                    "required": false
                }
            },
            "required": [
                "latitude",
                "longitude"
            ]
        }
    },
    "instance": [],
    "category": null,
    "tool": null,
    "api_idx": 22,
    "params": {
        "type": "object",
        "properties": {
            "latitude": {
                "type": "String",
                "description": "Latitude of the searched location. latitude can be retrieved from api/v1/meta/locationToLatLong(Location to Lat Long) endpoint in Meta collection.",
                "example_value": "65.9667",
                "required": true
            },
            "longitude": {
                "type": "String",
                "description": "Longitude of the searched location. longitude can be retrieved from api/v1/meta/locationToLatLong(Location to Lat Long) endpoint in Meta collection.",
                "example_value": "-18.5333",
                "required": true
            },
            "languagecode": {
                "type": "String",
                "description": "To obtain the response data in a specific language, enter the languagecode. languagecode can be retrieved from api/v1/meta/getLanguages(Get Languages\n) endpoint in Meta collection.",
                "example_value": "en-us",
                "required": false
            }
        },
        "required": [
            "latitude",
            "longitude"
        ]
    },
    "responses": [
        {
            "function_name": "Get_Nearby_Cities",
            "arguments": {
                "latitude": "40.7128",
                "longitude": "-74.0060"
            },
            "observation": [
                {
                    "cc1": "us",
                    "country": "United States",
                    "region": null,
                    "longitude": -73.996696472168,
                    "dest_id": 20085521,
                    "nr_hotels": 1,
                    "name": "Chinatown",
                    "dest_type": "city",
                    "latitude": 40.7164001464844
                },
                {
                    "longitude": -73.9845070528099,
                    "country": "United States",
                    "cc1": "us",
                    "region": "New York State",
                    "latitude": 40.6960857950378,
                    "name": "Brooklyn",
                    "dest_type": "city",
                    "dest_id": 20085207,
                    "nr_hotels": 531
                },
                {
                    "country": "United States",
                    "cc1": "us",
                    "region": "New Jersey",
                    "longitude": -74.0327987670898,
                    "nr_hotels": 83,
                    "dest_id": 20081434,
                    "dest_type": "city",
                    "name": "Hoboken",
                    "latitude": 40.7439002990723
                }
            ]
        },
        {
            "function_name": "Get_Nearby_Cities",
            "arguments": {
                "latitude": "40.7128",
                "longitude": "-74.0060"
            },
            "observation": [
                {
                    "dest_id": 20085521,
                    "region": null,
                    "longitude": -73.996696472168,
                    "nr_hotels": 1,
                    "name": "Chinatown",
                    "latitude": 40.7164001464844,
                    "country": "United States",
                    "dest_type": "city",
                    "cc1": "us"
                },
                {
                    "dest_type": "city",
                    "cc1": "us",
                    "country": "United States",
                    "latitude": 40.6960857950378,
                    "name": "Brooklyn",
                    "nr_hotels": 531,
                    "longitude": -73.9845070528099,
                    "region": "New York State",
                    "dest_id": 20085207
                },
                {
                    "dest_type": "city",
                    "cc1": "us",
                    "country": "United States",
                    "latitude": 40.7439002990723,
                    "name": "Hoboken",
                    "nr_hotels": 83,
                    "longitude": -74.0327987670898,
                    "dest_id": 20081434,
                    "region": "New Jersey"
                }
            ]
        }
    ],
    "response_summary": "The API response provides information about three cities in the United States. First, there's Chinatown, located in New York with coordinates at approximately 40.7164\u00b0N latitude and -73.9967\u00b0W longitude. It has only one hotel available. Next is Brooklyn, also in New York State, positioned around 40.6961\u00b0N latitude and -73.9845\u00b0W longitude, offering a much larger selection with 531 hotels. Lastly, Hoboken in New Jersey is situated near 40.7439\u00b0N latitude and -74.0328\u00b0W longitude, with 83 hotels listed. All three locations are classified as cities in the dataset.",
    "enhance_func_desc": "This API is ideal for travelers and planners seeking accommodation options near specific coordinates. It retrieves nearby cities with their hotel availability count and precise geographic coordinates. Users input latitude/longitude to receive city details including name, location, and hotel quantity, helping them compare lodging options in adjacent areas. The response includes city classification and exact positioning for accurate navigation.",
    "enhance_params_desc": {
        "enhanced_parameters": {
            "latitude": "Geographic coordinate specifying north-south position for search.",
            "longitude": "Geographic coordinate specifying east-west position for search.",
            "languagecode": "Language preference for the response data (e.g., 'en-us')."
        }
    },
    "enhance_resfield_desc": {
        "response_fields": [
            {
                "cc1": {
                    "type": "String",
                    "description": "The country code (ISO 3166-1 alpha-2) representing the country where the city is located (e.g., 'us' for United States)."
                },
                "country": {
                    "type": "String",
                    "description": "The full name of the country where the city is located (e.g., 'United States')."
                },
                "region": {
                    "type": "String",
                    "description": "The region or state within the country where the city is located (e.g., 'New York State'). Can be null if not applicable."
                },
                "longitude": {
                    "type": "Number",
                    "description": "The longitude coordinate of the city's location (e.g., -73.996696472168)."
                },
                "dest_id": {
                    "type": "Number",
                    "description": "A unique identifier for the destination (e.g., 20085521)."
                },
                "nr_hotels": {
                    "type": "Number",
                    "description": "The number of hotels available in the city (e.g., 1, 531, 83)."
                },
                "name": {
                    "type": "String",
                    "description": "The name of the city (e.g., 'Chinatown', 'Brooklyn', 'Hoboken')."
                },
                "dest_type": {
                    "type": "String",
                    "description": "The type of destination (e.g., 'city')."
                },
                "latitude": {
                    "type": "Number",
                    "description": "The latitude coordinate of the city's location (e.g., 40.7164001464844)."
                }
            }
        ]
    },
    "params_desc_list": null,
    "response_desc_list": [
        {
            "path_name": "$[].cc1",
            "name": "cc1",
            "description": "The country code (ISO 3166-1 alpha-2) representing the country where the city is located (e.g., 'us' for United States)."
        },
        {
            "path_name": "$[].country",
            "name": "country",
            "description": "The full name of the country where the city is located (e.g., 'United States')."
        },
        {
            "path_name": "$[].region",
            "name": "region",
            "description": "The region or state within the country where the city is located (e.g., 'New York State'). Can be null if not applicable."
        },
        {
            "path_name": "$[].longitude",
            "name": "longitude",
            "description": "The longitude coordinate of the city's location (e.g., -73.996696472168)."
        },
        {
            "path_name": "$[].dest_id",
            "name": "dest_id",
            "description": "A unique identifier for the destination (e.g., 20085521)."
        },
        {
            "path_name": "$[].nr_hotels",
            "name": "nr_hotels",
            "description": "The number of hotels available in the city (e.g., 1, 531, 83)."
        },
        {
            "path_name": "$[].name",
            "name": "name",
            "description": "The name of the city (e.g., 'Chinatown', 'Brooklyn', 'Hoboken')."
        },
        {
            "path_name": "$[].dest_type",
            "name": "dest_type",
            "description": "The type of destination (e.g., 'city')."
        },
        {
            "path_name": "$[].latitude",
            "name": "latitude",
            "description": "The latitude coordinate of the city's location (e.g., 40.7164001464844)."
        }
    ],
    "depends_on": [
        {
            "source_api_name": "Search_Restaurants",
            "dependence_type": "Soft Dependency",
            "depencend_field": "$[*].latitude",
            "param_name": "latitude",
            "reason": "There is a logical business relationship between searching for restaurants and finding nearby cities, as travelers often look for accommodation near dining options. The 'latitude' field from 'Search_Restaurants' matches the data type (String) required by 'Get_Nearby_Cities', and the example values show it provides the geographic coordinate needed for the target API parameter. This represents a soft dependency as the restaurant API isn't strictly required for finding nearby cities but provides useful input for a common user workflow."
        },
        {
            "source_api_name": "Get_Popular_Attraction_Near_By",
            "dependence_type": "Soft Dependency",
            "depencend_field": "$.popular_landmarks[*].latitude",
            "param_name": "latitude",
            "reason": "The 'Get_Popular_Attraction_Near_By' API provides latitude coordinates of nearby attractions, which could logically be used as input for the 'Get_Nearby_Cities' API to find cities near those attractions. This forms a business association where travelers might first find attractions and then look for accommodation nearby. The data type (numeric latitude) matches the required string type for the target API parameter, and the example values demonstrate valid geographic coordinates that could be converted to strings for use in the target API."
        },
        {
            "source_api_name": "Get_Popular_Attraction_Near_By",
            "dependence_type": "Soft Dependency",
            "depencend_field": "$.closest_landmarks[*].latitude",
            "param_name": "latitude",
            "reason": "There is a clear business association between the 'Get_Popular_Attraction_Near_By' API and the 'Get_Nearby_Cities' API, as both deal with geographic locations and proximity searches. The 'latitude' field from the attractions API matches the data type (String) required by the 'latitude' parameter in the target API, even though the example shows numeric values, they can be converted to strings. This represents a soft dependency as the attractions API provides useful location data that could be used to find nearby cities, though it's not strictly required."
        },
        {
            "source_api_name": "Car_Search",
            "dependence_type": "Soft Dependency",
            "depencend_field": "$.content.map.supplierLocations[*].supplierPinContent.latLong.latitude",
            "param_name": "latitude",
            "reason": "The 'Car_Search' API provides latitude coordinates of car rental suppliers, which could logically be used as input for the 'Get_Nearby_Cities' API to find cities near those rental locations. This represents a soft business relationship where travelers might want to find accommodation near their car rental points. The data type (numeric latitude) from the source API can be easily converted to the string format required by the target API."
        },
        {
            "source_api_name": "Car_Auto-Complete",
            "dependence_type": "Soft Dependency",
            "depencend_field": "$[*].coordinates.latitude",
            "param_name": "latitude",
            "reason": "There is a clear business association between the 'Car_Auto-Complete' API and the 'Get_Nearby_Cities' API, as both deal with location-based searches. The latitude values from the 'Car_Auto-Complete' response can directly serve as input for the 'latitude' parameter in 'Get_Nearby_Cities'. The data types match (both are numeric values representing geographic coordinates), and the example values demonstrate compatible latitude coordinates that would work for the target API."
        },
        {
            "source_api_name": "List_Restaurants_By_Search_Query",
            "dependence_type": "Soft Dependency",
            "depencend_field": "$.results[*].latitude",
            "param_name": "latitude",
            "reason": "The 'List_Restaurants_By_Search_Query' API provides latitude coordinates of restaurants, which can logically be used to search for nearby cities through the 'Get_Nearby_Cities' API. This forms a business association where restaurant locations serve as reference points for finding accommodation options in adjacent areas. The data type (numeric latitude values) matches the string type expected by the target API, and numeric values can be easily converted to strings. This represents a soft dependency as the restaurant API isn't strictly required but provides useful input for a common travel planning workflow."
        },
        {
            "source_api_name": "Car_Search",
            "dependence_type": "Soft Dependency",
            "depencend_field": "$.search_results[*].supplier_info.latitude",
            "param_name": "latitude",
            "reason": "There is a potential business relationship between car rental locations and nearby hotel searches, as travelers often need both services during trips. The 'latitude' field from the 'Car_Search' API matches the data type (String) required by the 'Get_Nearby_Cities' API's 'latitude' parameter. The example values show compatible coordinate formats. This represents a soft dependency, as car rental locations could logically serve as reference points for finding nearby hotels, though it's not a strict requirement."
        },
        {
            "source_api_name": "Location_to_Lat_Long",
            "dependence_type": "Hard Dependency",
            "depencend_field": "$[*].geometry.location.lat",
            "param_name": "latitude",
            "reason": "The 'Location_to_Lat_Long' API is a necessary prerequisite for the 'Get_Nearby_Cities' API as it provides the exact latitude required by the target API. The field '$[*].geometry.location.lat' from the source API matches the 'latitude' parameter's data type (String) and provides the precise geographic coordinate needed for the search. This represents a hard dependency as the target API explicitly states that latitude can be retrieved from the source API."
        },
        {
            "source_api_name": "Search_Hotel_Destination",
            "dependence_type": "Hard Dependency",
            "depencend_field": "$[*].latitude",
            "param_name": "latitude",
            "reason": "The 'Search_Hotel_Destination' API provides latitude information that can be directly used as input for the 'latitude' parameter in the 'Get_Nearby_Cities' API. There is a clear business association as both APIs deal with geographic locations for hotel-related searches. The data type (numeric value) from the source API matches the expected string type in the target API (numeric strings are acceptable for latitude parameters). This represents a hard dependency as the latitude information is essential for the target API's functionality."
        },
        {
            "source_api_name": "Search_Restaurants",
            "dependence_type": "Soft Dependency",
            "depencend_field": "$[*].longitude",
            "param_name": "longitude",
            "reason": "The 'Search_Restaurants' API provides longitude values that can be used as input for the 'longitude' parameter in the 'Get_Nearby_Cities' API. This forms a business association as travelers often look for nearby cities after finding restaurants in a specific location. The data type (String) matches the requirement, and the example values demonstrate valid longitude coordinates that can be directly used for the target API parameter."
        },
        {
            "source_api_name": "Get_Popular_Attraction_Near_By",
            "dependence_type": "Soft Dependency",
            "depencend_field": "$.popular_landmarks[*].longitude",
            "param_name": "longitude",
            "reason": "There is a clear business association between the 'Get_Popular_Attraction_Near_By' API and the 'Get_Nearby_Cities' API, as both deal with geographic locations and proximity. The longitude values from popular attractions can logically be used to search for nearby cities. The data type (numeric longitude values) matches the expected string type for the target API parameter, and the example values demonstrate valid longitude coordinates that could be used as input."
        },
        {
            "source_api_name": "Get_Popular_Attraction_Near_By",
            "dependence_type": "Soft Dependency",
            "depencend_field": "$.closest_landmarks[*].longitude",
            "param_name": "longitude",
            "reason": "There is a logical business relationship where travelers might want to find nearby cities based on the longitude of popular attractions they are visiting. The 'closest_landmarks[*].longitude' field from 'Get_Popular_Attraction_Near_By' matches the data type (String) required by 'longitude' in 'Get_Nearby_Cities'. Although the example values are in numeric format, they can be easily converted to strings. This represents a soft dependency as the attractions API isn't strictly required for finding nearby cities but provides useful input for a common travel planning workflow."
        },
        {
            "source_api_name": "List_Restaurants_By_Search_Query",
            "dependence_type": "Soft Dependency",
            "depencend_field": "$.results[*].longitude",
            "param_name": "longitude",
            "reason": "There is a potential business relationship between searching for restaurants and finding nearby cities, as travelers often look for accommodation near dining options. The 'longitude' field from 'List_Restaurants_By_Search_Query' matches the data type and purpose required by the 'longitude' parameter in 'Get_Nearby_Cities'. This represents a soft dependency as the restaurant API isn't strictly required for finding nearby cities but provides useful input for a common user workflow."
        },
        {
            "source_api_name": "Car_Auto-Complete",
            "dependence_type": "Hard Dependency",
            "depencend_field": "$[*].coordinates.longitude",
            "param_name": "longitude",
            "reason": "The 'Car_Auto-Complete' API provides longitude coordinates that can be directly used as input for the 'longitude' parameter in the 'Get_Nearby_Cities' API. Both fields share the same data type (String) and represent geographic coordinates. This establishes a hard dependency as the source API provides essential location data required by the target API."
        },
        {
            "source_api_name": "Search_Hotels",
            "dependence_type": "Soft Dependency",
            "depencend_field": "$.hotels[*].property.longitude",
            "param_name": "longitude",
            "reason": "The 'Search_Hotels' API provides longitude values for hotel properties, which can be used as input for the 'longitude' parameter in the 'Get_Nearby_Cities' API. This forms a business association where travelers might want to find nearby cities based on the location of hotels they are considering. The data type matches (both expect longitude values), and the example values from the response fields are appropriate for use as input parameters."
        },
        {
            "source_api_name": "Car_Search",
            "dependence_type": "Soft Dependency",
            "depencend_field": "$.search_results[*].supplier_info.longitude",
            "param_name": "longitude",
            "reason": "There is a potential business relationship between car rental locations and nearby hotel searches, as travelers often need both services during trips. The longitude field from the 'Car_Search' API matches the data type (String) required by the 'Get_Nearby_Cities' API's longitude parameter. The example values demonstrate valid longitude coordinates that could be used for hotel searches near car rental locations. This represents a soft dependency as the car rental information isn't strictly required for hotel searches but provides useful input for a common travel planning scenario."
        },
        {
            "source_api_name": "Taxi_Search_Location",
            "dependence_type": "Hard Dependency",
            "depencend_field": "$[*].longitude",
            "param_name": "longitude",
            "reason": "There is a clear business association between the 'Taxi_Search_Location' API and the 'Get_Nearby_Cities' API, as both deal with geographic coordinates for location-based services. The 'longitude' field from the 'Taxi_Search_Location' API response matches exactly with the 'longitude' parameter required by the 'Get_Nearby_Cities' API in both data type (String) and semantic meaning (geographic coordinate). This represents a hard dependency as the taxi location API provides the necessary geographic data required by the nearby cities API."
        }
    ],
    "verified": true
}