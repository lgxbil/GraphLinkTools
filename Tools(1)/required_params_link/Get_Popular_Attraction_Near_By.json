{
    "name": "Get_Popular_Attraction_Near_By",
    "docs_row": {
        "name": "Get_Popular_Attraction_Near_By",
        "endpoint": "/api/v1/hotels/getPopularAttractionNearBy",
        "func_description": "Search for popular attractions around a given hotel. ",
        "parameters": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "String",
                    "description": "hotel_id can be retrieved from api/v1/hotels/searchHotels(Search Hotels) or api/v1/hotels/searchHotelsByCoordinates(Search Hotels By Coordinates\n) endpoint in Hotels collection.",
                    "example_value": "5955189",
                    "required": true
                },
                "languagecode": {
                    "type": "String",
                    "description": "To obtain the response data in a specific language, enter the languagecode. languagecode can be retrieved from api/v1/meta/getLanguages(Get Languages\n) endpoint in Meta collection.",
                    "example_value": "en-us",
                    "required": false
                }
            },
            "required": [
                "hotel_id"
            ]
        }
    },
    "instance": [],
    "category": null,
    "tool": null,
    "api_idx": 7,
    "params": {
        "type": "object",
        "properties": {
            "hotel_id": {
                "type": "String",
                "description": "hotel_id can be retrieved from api/v1/hotels/searchHotels(Search Hotels) or api/v1/hotels/searchHotelsByCoordinates(Search Hotels By Coordinates\n) endpoint in Hotels collection.",
                "example_value": "5955189",
                "required": true
            },
            "languagecode": {
                "type": "String",
                "description": "To obtain the response data in a specific language, enter the languagecode. languagecode can be retrieved from api/v1/meta/getLanguages(Get Languages\n) endpoint in Meta collection.",
                "example_value": "en-us",
                "required": false
            }
        },
        "required": [
            "hotel_id"
        ]
    },
    "responses": [
        {
            "function_name": "Get_Popular_Attraction_Near_By",
            "arguments": {
                "hotel_id": "5955189"
            },
            "observation": {
                "closest_landmarks": [
                    {
                        "longitude": 72.8525733947754,
                        "tag": "Mumbai Domestic Terminal 1",
                        "latitude": 19.0915227852161,
                        "distance": 2.98855388737106,
                        "average_out_of_10": 8.4,
                        "total_votes": 43
                    },
                    {
                        "tag": "ISKCON",
                        "latitude": 19.113262,
                        "longitude": 72.826211,
                        "average_out_of_10": 9.2,
                        "distance": 4.28912195423714,
                        "total_votes": 16
                    },
                    {
                        "latitude": 19.1018369233517,
                        "longitude": 72.8246784210205,
                        "tag": "Juhu Beach",
                        "distance": 4.46375117197715,
                        "average_out_of_10": 8.6,
                        "total_votes": 44
                    }
                ],
                "popular_landmarks": [
                    {
                        "average_out_of_10": 8.4,
                        "distance": 2.98855388737106,
                        "longitude": 72.8525733947754,
                        "tag": "Mumbai Domestic Terminal 1",
                        "latitude": 19.0915227852161,
                        "total_votes": 43
                    },
                    {
                        "tag": "Vihar Lake",
                        "longitude": 72.910269,
                        "latitude": 19.154184,
                        "total_votes": 10,
                        "distance": 3.05151419162776,
                        "average_out_of_10": 8.6
                    },
                    {
                        "tag": "ISKCON",
                        "latitude": 19.113262,
                        "longitude": 72.826211,
                        "total_votes": 16,
                        "distance": 4.28912195423714,
                        "average_out_of_10": 9.2
                    }
                ]
            }
        },
        {
            "function_name": "Get_Popular_Attraction_Near_By",
            "arguments": {
                "hotel_id": "5955189",
                "languagecode": "en-us"
            },
            "observation": {
                "popular_landmarks": [
                    {
                        "tag": "Mumbai Domestic Terminal 1",
                        "distance": 4.80961126915433,
                        "total_votes": 43,
                        "longitude": 72.8525733947754,
                        "average_out_of_10": 8.4,
                        "latitude": 19.0915227852161
                    },
                    {
                        "latitude": 19.154184,
                        "average_out_of_10": 8.6,
                        "longitude": 72.910269,
                        "total_votes": 10,
                        "distance": 4.91093605708673,
                        "tag": "Vihar Lake"
                    },
                    {
                        "latitude": 19.113262,
                        "longitude": 72.826211,
                        "average_out_of_10": 9.2,
                        "tag": "ISKCON",
                        "total_votes": 16,
                        "distance": 6.90267268495631
                    }
                ],
                "closest_landmarks": [
                    {
                        "latitude": 19.0915227852161,
                        "average_out_of_10": 8.4,
                        "longitude": 72.8525733947754,
                        "distance": 4.80961126915433,
                        "total_votes": 43,
                        "tag": "Mumbai Domestic Terminal 1"
                    },
                    {
                        "latitude": 19.113262,
                        "average_out_of_10": 9.2,
                        "longitude": 72.826211,
                        "distance": 6.90267268495631,
                        "total_votes": 16,
                        "tag": "ISKCON"
                    },
                    {
                        "latitude": 19.1018369233517,
                        "average_out_of_10": 8.6,
                        "longitude": 72.8246784210205,
                        "total_votes": 44,
                        "distance": 7.18371116885822,
                        "tag": "Juhu Beach"
                    }
                ]
            }
        }
    ],
    "response_summary": "The closest landmarks to your location include Mumbai Domestic Terminal 1, which is about 2.99 kilometers away and has an average rating of 8.4 out of 10 based on 43 votes. ISKCON, located approximately 4.29 kilometers away, is highly rated at 9.2 out of 10 from 16 votes. Juhu Beach is also nearby at 4.46 kilometers and holds an 8.6 rating from 44 votes.  \n\nAmong the popular landmarks, Mumbai Domestic Terminal 1 remains a top choice with the same rating and distance. Vihar Lake is another favored spot, situated around 3.05 kilometers away, rated 8.6 by 10 voters. ISKCON, with its high rating of 9.2, is also a popular destination. These landmarks offer a mix of convenience, scenic beauty, and cultural significance for visitors.",
    "enhance_func_desc": "This API is ideal for travelers looking to explore nearby attractions while staying at a hotel. It retrieves popular landmarks and points of interest near a specified hotel, providing details like distance, average ratings, and number of votes. Users can filter results by language preference. The response helps in planning visits to cultural, scenic, or convenient spots around the hotel location. The hotel ID must be obtained from the SearchHotels API.",
    "enhance_params_desc": {
        "enhanced_parameters": {
            "hotel_id": "Unique identifier for the hotel, sourced from searchHotels or searchHotelsByCoordinates endpoints.",
            "languagecode": "Language preference for the response data (e.g., 'en-us' for English)."
        }
    },
    "enhance_resfield_desc": {
        "response_fields": {
            "closest_landmarks": {
                "type": "Array",
                "description": "A list of landmarks closest to the user's location, including details like distance, ratings, and coordinates.",
                "ar_items": {
                    "type": "Object",
                    "description": "An object representing a landmark with its details.",
                    "ob_properties": {
                        "longitude": {
                            "type": "Number",
                            "description": "The longitude coordinate of the landmark's location."
                        },
                        "tag": {
                            "type": "String",
                            "description": "The name or tag of the landmark (e.g., 'Mumbai Domestic Terminal 1')."
                        },
                        "latitude": {
                            "type": "Number",
                            "description": "The latitude coordinate of the landmark's location."
                        },
                        "distance": {
                            "type": "Number",
                            "description": "The distance in kilometers from the user's location to the landmark."
                        },
                        "average_out_of_10": {
                            "type": "Number",
                            "description": "The average rating of the landmark, scored out of 10."
                        },
                        "total_votes": {
                            "type": "Number",
                            "description": "The total number of votes or reviews contributing to the landmark's average rating."
                        }
                    }
                }
            },
            "popular_landmarks": {
                "type": "Array",
                "description": "A list of popular landmarks, including details like distance, ratings, and coordinates.",
                "ar_items": {
                    "type": "Object",
                    "description": "An object representing a popular landmark with its details.",
                    "ob_properties": {
                        "average_out_of_10": {
                            "type": "Number",
                            "description": "The average rating of the landmark, scored out of 10."
                        },
                        "distance": {
                            "type": "Number",
                            "description": "The distance in kilometers from the user's location to the landmark."
                        },
                        "longitude": {
                            "type": "Number",
                            "description": "The longitude coordinate of the landmark's location."
                        },
                        "tag": {
                            "type": "String",
                            "description": "The name or tag of the landmark (e.g., 'Vihar Lake')."
                        },
                        "latitude": {
                            "type": "Number",
                            "description": "The latitude coordinate of the landmark's location."
                        },
                        "total_votes": {
                            "type": "Number",
                            "description": "The total number of votes or reviews contributing to the landmark's average rating."
                        }
                    }
                }
            }
        }
    },
    "params_desc_list": null,
    "response_desc_list": [
        {
            "path_name": "$.closest_landmarks",
            "name": "closest_landmarks",
            "description": "A list of landmarks closest to the user's location, including details like distance, ratings, and coordinates."
        },
        {
            "path_name": "$.closest_landmarks[]",
            "name": "closest_landmarks[]",
            "description": "An object representing a landmark with its details."
        },
        {
            "path_name": "$.closest_landmarks[].longitude",
            "name": "longitude",
            "description": "The longitude coordinate of the landmark's location."
        },
        {
            "path_name": "$.closest_landmarks[].tag",
            "name": "tag",
            "description": "The name or tag of the landmark (e.g., 'Mumbai Domestic Terminal 1')."
        },
        {
            "path_name": "$.closest_landmarks[].latitude",
            "name": "latitude",
            "description": "The latitude coordinate of the landmark's location."
        },
        {
            "path_name": "$.closest_landmarks[].distance",
            "name": "distance",
            "description": "The distance in kilometers from the user's location to the landmark."
        },
        {
            "path_name": "$.closest_landmarks[].average_out_of_10",
            "name": "average_out_of_10",
            "description": "The average rating of the landmark, scored out of 10."
        },
        {
            "path_name": "$.closest_landmarks[].total_votes",
            "name": "total_votes",
            "description": "The total number of votes or reviews contributing to the landmark's average rating."
        },
        {
            "path_name": "$.popular_landmarks",
            "name": "popular_landmarks",
            "description": "A list of popular landmarks, including details like distance, ratings, and coordinates."
        },
        {
            "path_name": "$.popular_landmarks[]",
            "name": "popular_landmarks[]",
            "description": "An object representing a popular landmark with its details."
        },
        {
            "path_name": "$.popular_landmarks[].average_out_of_10",
            "name": "average_out_of_10",
            "description": "The average rating of the landmark, scored out of 10."
        },
        {
            "path_name": "$.popular_landmarks[].distance",
            "name": "distance",
            "description": "The distance in kilometers from the user's location to the landmark."
        },
        {
            "path_name": "$.popular_landmarks[].longitude",
            "name": "longitude",
            "description": "The longitude coordinate of the landmark's location."
        },
        {
            "path_name": "$.popular_landmarks[].tag",
            "name": "tag",
            "description": "The name or tag of the landmark (e.g., 'Vihar Lake')."
        },
        {
            "path_name": "$.popular_landmarks[].latitude",
            "name": "latitude",
            "description": "The latitude coordinate of the landmark's location."
        },
        {
            "path_name": "$.popular_landmarks[].total_votes",
            "name": "total_votes",
            "description": "The total number of votes or reviews contributing to the landmark's average rating."
        }
    ],
    "depends_on": [
        {
            "source_api_name": "Search_Hotels",
            "dependence_type": "Hard Dependency",
            "depencend_field": "$.hotels[*].hotel_id",
            "param_name": "hotel_id",
            "reason": "The 'Search_Hotels' API is a necessary prerequisite for the 'Get_Popular_Attraction_Near_By' API as it provides the 'hotel_id' parameter required by the target API. The response field 'hotels[].hotel_id' from 'Search_Hotels' directly matches the 'hotel_id' parameter in the target API, both in terms of business association (as the target API explicitly states the hotel_id must come from searchHotels) and data type (String vs. Number, but numeric IDs can be easily converted to strings)."
        },
        {
            "source_api_name": "Get_Question_And_Answer",
            "dependence_type": "Hard Dependency",
            "depencend_field": "$.hotel_id",
            "param_name": "hotel_id",
            "reason": "The 'Get_Question_And_Answer' API provides the 'hotel_id' field in its response, which is exactly what the 'Get_Popular_Attraction_Near_By' API requires as input. This establishes a hard dependency because the target API explicitly states that the hotel_id must be obtained from either 'searchHotels' or 'searchHotelsByCoordinates' endpoints, and the source API's response field matches this requirement perfectly in both data type and purpose."
        },
        {
            "source_api_name": "Get_Question_And_Answer",
            "dependence_type": "Hard Dependency",
            "depencend_field": "$.q_and_a_pairs[*].hotel_id",
            "param_name": "hotel_id",
            "reason": "The 'Get_Question_And_Answer' API provides hotel_id values that directly match the required parameter for 'Get_Popular_Attraction_Near_By'. This represents a hard dependency as the documentation explicitly states that the hotel_id must be obtained from search APIs, and the Q&A API serves as another valid source for this identifier. The data types match (String vs Number in examples, but numeric hotel_ids are commonly convertible to strings), and the field serves the exact same purpose in both APIs."
        },
        {
            "source_api_name": "Get_Hotel_Reviews(Tips)",
            "dependence_type": "Hard Dependency",
            "depencend_field": "$.result[*].hotel_id",
            "param_name": "hotel_id",
            "reason": "The 'Get_Hotel_Reviews(Tips)' API provides the 'hotel_id' field in its response, which is exactly what the 'hotel_id' parameter of the 'Get_Popular_Attraction_Near_By' API requires. This establishes a hard dependency because the target API explicitly states that the hotel ID must be obtained from the SearchHotels API, and the source API's response field matches this requirement perfectly in both data type and purpose."
        },
        {
            "source_api_name": "Get_Hotel_Policies",
            "dependence_type": "Hard Dependency",
            "depencend_field": "$.hotel_id",
            "param_name": "hotel_id",
            "reason": "The 'Get_Hotel_Policies' API is a necessary prerequisite for calling the 'Get_Popular_Attraction_Near_By' API as both require the same 'hotel_id' parameter. The 'hotel_id' field from the 'Get_Hotel_Policies' response matches exactly with the 'hotel_id' parameter required by the target API, both in terms of business association and data type (String). This represents a hard dependency as the hotel ID is essential for both APIs."
        },
        {
            "source_api_name": "Get_Room_List",
            "dependence_type": "Hard Dependency",
            "depencend_field": "$.hotel_id",
            "param_name": "hotel_id",
            "reason": "The 'Get_Room_List' API provides the 'hotel_id' field which is exactly what the 'Get_Popular_Attraction_Near_By' API requires as input. This represents a hard dependency as the hotel_id from 'Get_Room_List' is a necessary prerequisite for calling the target API. The data types match (both expect a hotel identifier), and the field directly corresponds to the required parameter."
        },
        {
            "source_api_name": "Get_Hotel_Review_Scores",
            "dependence_type": "Hard Dependency",
            "depencend_field": "$[*].hotel_id",
            "param_name": "hotel_id",
            "reason": "The 'Get_Hotel_Review_Scores' API provides review scores for a specific hotel, which inherently requires the same hotel_id parameter that the 'Get_Popular_Attraction_Near_By' API needs. This establishes a hard dependency as the hotel_id from the review scores API can directly serve as input for the target API. The data type matches (String vs. Number, but the example shows numeric hotel_id which can be converted to string), and the business context confirms this is a valid prerequisite relationship."
        },
        {
            "source_api_name": "Search_Hotels_By_Coordinates",
            "dependence_type": "Hard Dependency",
            "depencend_field": "$.result[*].hotel_id",
            "param_name": "hotel_id",
            "reason": "The 'Search_Hotels_By_Coordinates' API is explicitly mentioned in the target API documentation as a valid source for the 'hotel_id' parameter. The response field '$.result[*].hotel_id' from this API directly provides the unique hotel identifiers required by the 'Get_Popular_Attraction_Near_By' API. This represents a hard dependency as the source API is specifically identified as necessary for obtaining the required parameter."
        },
        {
            "source_api_name": "Get_Hotel_Reviews_Filter_Metadata",
            "dependence_type": "Hard Dependency",
            "depencend_field": "$.hotel_id",
            "param_name": "hotel_id",
            "reason": "The 'Get_Hotel_Reviews_Filter_Metadata' API provides the 'hotel_id' field which is exactly what the 'Get_Popular_Attraction_Near_By' API requires as input. This represents a hard dependency because the hotel_id from the source API is a necessary prerequisite for calling the target API. The data types match perfectly (both are Strings), and the example value from the source API fits the expected format for the target API parameter."
        },
        {
            "source_api_name": "Get_Description_And_Info",
            "dependence_type": "Hard Dependency",
            "depencend_field": "$[*].hotel_id",
            "param_name": "hotel_id",
            "reason": "The 'Get_Description_And_Info' API provides hotel details including the 'hotel_id' field, which is exactly what the 'Get_Popular_Attraction_Near_By' API requires as input. This establishes a hard dependency because the target API explicitly states that the hotel_id must be obtained from searchHotels or searchHotelsByCoordinates endpoints, and the source API's response field matches this requirement both in data type (String) and in the example value provided."
        }
    ],
    "verified": true
}